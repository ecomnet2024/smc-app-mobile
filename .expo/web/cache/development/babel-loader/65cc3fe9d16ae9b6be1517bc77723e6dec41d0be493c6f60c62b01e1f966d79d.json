{"ast":null,"code":"var _jsxFileName = \"/home/newuser/Desktop/tutoo flutter/smc-app-mobile/App.js\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { Ionicons } from '@expo/vector-icons';\nimport { TouchableOpacity, GestureHandlerRootView } from 'react-native-gesture-handler';\nimport SignUpScreen from './src/Screens/SignUpScreen';\nimport LoginScreen from './src/Screens/LoginScreen';\nimport React, { useEffect, useState } from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport AntDesign from '@expo/vector-icons/AntDesign';\nimport ForgotScreen from './src/Screens/ForgotScreen';\nimport HomeScreen from './src/Screens/HomeScreen';\nimport PhoneScreen from './src/Screens/PhoneScreen';\nimport NotificationScreen from './src/Screens/NotificationScreen';\nimport SettingScreen from './src/Screens/SettingScreen';\nimport NewConsultationScreen from './src/Screens/NewConsultationScreen';\nimport NewPatientScreen from './src/Screens/NewPatientScreen';\nimport ConsultationDetails from './src/Screens/ConsultationDetails';\nimport ConsultationTabs from './src/Screens/ConsultationTabs';\nimport { ApolloClient, ApolloProvider, InMemoryCache, HttpLink } from \"@apollo/client\";\nimport { setContext } from '@apollo/client/link/context';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { SessionProvider } from './Components/SessionProvider';\nimport EmergencyScreen from './src/Screens/EmergencyScreen';\nimport LabResultScreen from './src/Screens/AllDetails/LabresultScreen';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Stack = createNativeStackNavigator();\nconst Tab = createBottomTabNavigator();\nfunction HomeTabNavigator() {\n  return _jsxDEV(Tab.Navigator, {\n    screenOptions: ({\n      route\n    }) => ({\n      tabBarIcon: ({\n        focused,\n        color,\n        size\n      }) => {\n        let iconName;\n        if (route.name === 'Home') {\n          iconName = focused ? 'home' : 'home-outline';\n        } else if (route.name === 'Phone') {\n          iconName = focused ? 'call' : 'call-outline';\n        } else if (route.name === 'Notification') {\n          iconName = focused ? 'notifications' : 'notifications-outline';\n        } else if (route.name === 'Setting') {\n          iconName = focused ? 'settings' : 'settings-outline';\n        }\n        return _jsxDEV(Ionicons, {\n          name: iconName,\n          size: size,\n          color: color\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 18\n        }, this);\n      },\n      tabBarActiveTintColor: '#000000',\n      tabBarInactiveTintColor: '#8e8e93',\n      tabBarStyle: {\n        backgroundColor: '#fff',\n        paddingBottom: 5\n      }\n    }),\n    children: _jsxDEV(Tab.Screen, {\n      name: \"Home\",\n      component: HomeScreen,\n      options: {\n        headerShown: false\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\nfunction SplashScreen({\n  navigation\n}) {\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      navigation.replace('Login');\n    }, 3000);\n    return () => clearTimeout(timer);\n  }, [navigation]);\n  return _jsxDEV(View, {\n    style: styles.splashContainer,\n    children: _jsxDEV(Image, {\n      source: require('./src/assets/Group 13.png'),\n      style: styles.logo,\n      resizeMode: \"contain\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\nfunction AuthStack() {\n  return _jsxDEV(Stack.Navigator, {\n    initialRouteName: \"Splash\",\n    children: [_jsxDEV(Stack.Screen, {\n      name: \"SignUp\",\n      options: {\n        headerShown: false,\n        animation: \"slide_from_right\"\n      },\n      component: SignUpScreen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), _jsxDEV(Stack.Screen, {\n      name: \"Login\",\n      options: {\n        headerShown: false,\n        animation: \"slide_from_left\"\n      },\n      component: LoginScreen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), _jsxDEV(Stack.Screen, {\n      name: \"Splash\",\n      options: {\n        headerShown: false\n      },\n      component: SplashScreen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), _jsxDEV(Stack.Screen, {\n      name: \"Forgot\",\n      options: {\n        headerShown: false,\n        animation: \"fade_from_bottom\"\n      },\n      component: ForgotScreen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), _jsxDEV(Stack.Screen, {\n      name: \"Home\",\n      options: {\n        headerShown: false\n      },\n      component: HomeScreen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), _jsxDEV(Stack.Screen, {\n      name: \"NewConsultation\",\n      options: {\n        headerShown: false,\n        animation: \"slide_from_right\"\n      },\n      component: NewConsultationScreen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), _jsxDEV(Stack.Screen, {\n      name: \"HomeTabs\",\n      options: {\n        headerShown: false\n      },\n      component: HomeTabNavigator\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), _jsxDEV(Stack.Screen, {\n      name: \"NewPatient\",\n      options: {\n        headerShown: false\n      },\n      component: NewPatientScreen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), _jsxDEV(Stack.Screen, {\n      name: \"Details\",\n      options: {\n        headerShown: false,\n        animation: \"ios_from_left\"\n      },\n      component: ConsultationDetails\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), _jsxDEV(Stack.Screen, {\n      name: \"ConsultationTabs\",\n      options: {\n        headerShown: false\n      },\n      component: ConsultationTabs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), _jsxDEV(Stack.Screen, {\n      name: \"Emergency\",\n      options: {\n        headerShown: false,\n        animation: \"ios_from_left\"\n      },\n      component: EmergencyScreen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), _jsxDEV(Stack.Screen, {\n      name: \"Labsresult\",\n      options: {\n        headerShown: false\n      },\n      component: LabResultScreen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n}\nconst createApolloClient = token => {\n  const httpLink = new HttpLink({\n    uri: \"http://5.182.33.47:4000/graphql\"\n  });\n  const authLink = setContext(async (_, {\n    headers\n  }) => {\n    const token = await AsyncStorage.getItem('userToken');\n    console.log(\"Token récupéré:\", token);\n    const authorizationHeader = token ? `Bearer ${token}` : '';\n    console.log(\"En-tête Authorization:\", authorizationHeader);\n    return {\n      headers: Object.assign({}, headers, {\n        authorization: authorizationHeader\n      })\n    };\n  });\n  return new ApolloClient({\n    link: authLink.concat(httpLink),\n    cache: new InMemoryCache()\n  });\n};\nexport default function App() {\n  const [client, setClient] = useState(null);\n  useEffect(() => {\n    const initializeApolloClient = async () => {\n      const token = await AsyncStorage.getItem('userToken');\n      setClient(createApolloClient(token));\n    };\n    initializeApolloClient();\n  }, []);\n  if (!client) {\n    return null;\n  }\n  return _jsxDEV(ApolloProvider, {\n    client: client,\n    children: _jsxDEV(NavigationContainer, {\n      children: _jsxDEV(SessionProvider, {\n        children: _jsxDEV(AuthStack, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 8\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 5\n  }, this);\n}\nconst styles = StyleSheet.create({\n  splashContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#3C58C1'\n  },\n  logo: {\n    width: '90%',\n    height: '90%'\n  },\n  getStartedContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#FFFFFF'\n  },\n  getStartedText: {\n    fontSize: 24,\n    fontWeight: 'semibold',\n    marginBottom: 40,\n    bottom: 60\n  },\n  getStartedButton: {\n    position: 'absolute',\n    bottom: 35,\n    backgroundColor: '#D3D3D3',\n    flexDirection: 'row',\n    borderWidth: 1,\n    paddingVertical: 15,\n    paddingHorizontal: 50,\n    borderRadius: 100,\n    alignSelf: 'center',\n    borderColor: '#D4D4D4'\n  },\n  getStartedButtonText: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginRight: 15\n  },\n  iconContainer: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  icon: {\n    marginRight: -10\n  }\n});","map":{"version":3,"names":["NavigationContainer","createNativeStackNavigator","createBottomTabNavigator","Ionicons","TouchableOpacity","GestureHandlerRootView","SignUpScreen","LoginScreen","React","useEffect","useState","Image","AntDesign","ForgotScreen","HomeScreen","PhoneScreen","NotificationScreen","SettingScreen","NewConsultationScreen","NewPatientScreen","ConsultationDetails","ConsultationTabs","ApolloClient","ApolloProvider","InMemoryCache","HttpLink","setContext","AsyncStorage","SessionProvider","EmergencyScreen","LabResultScreen","jsxDEV","_jsxDEV","Stack","Tab","HomeTabNavigator","Navigator","screenOptions","route","tabBarIcon","focused","color","size","iconName","name","fileName","_jsxFileName","lineNumber","columnNumber","tabBarActiveTintColor","tabBarInactiveTintColor","tabBarStyle","backgroundColor","paddingBottom","children","Screen","component","options","headerShown","SplashScreen","navigation","timer","setTimeout","replace","clearTimeout","View","style","styles","splashContainer","source","require","logo","resizeMode","AuthStack","initialRouteName","animation","createApolloClient","token","httpLink","uri","authLink","_","headers","getItem","console","log","authorizationHeader","Object","assign","authorization","link","concat","cache","App","client","setClient","initializeApolloClient","StyleSheet","create","flex","justifyContent","alignItems","width","height","getStartedContainer","getStartedText","fontSize","fontWeight","marginBottom","bottom","getStartedButton","position","flexDirection","borderWidth","paddingVertical","paddingHorizontal","borderRadius","alignSelf","borderColor","getStartedButtonText","marginRight","iconContainer","icon"],"sources":["/home/newuser/Desktop/tutoo flutter/smc-app-mobile/App.js"],"sourcesContent":["import { StyleSheet, Text, View } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { Ionicons } from '@expo/vector-icons';\nimport { TouchableOpacity, GestureHandlerRootView } from 'react-native-gesture-handler'\nimport SignUpScreen  from './src/Screens/SignUpScreen';\nimport  LoginScreen from './src/Screens/LoginScreen';\nimport React, { useEffect, useState } from 'react';\nimport { Image } from 'react-native'\nimport AntDesign from '@expo/vector-icons/AntDesign';\nimport ForgotScreen from './src/Screens/ForgotScreen';\nimport HomeScreen from './src/Screens/HomeScreen';\nimport PhoneScreen from './src/Screens/PhoneScreen';\nimport NotificationScreen from './src/Screens/NotificationScreen';\nimport SettingScreen from './src/Screens/SettingScreen';\nimport NewConsultationScreen from './src/Screens/NewConsultationScreen';\nimport NewPatientScreen from './src/Screens/NewPatientScreen';\nimport ConsultationDetails from './src/Screens/ConsultationDetails';\nimport ConsultationTabs from './src/Screens/ConsultationTabs';\nimport { ApolloClient, ApolloProvider, InMemoryCache, HttpLink } from \"@apollo/client\";\nimport { setContext } from '@apollo/client/link/context';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { SessionProvider } from './Components/SessionProvider';\nimport EmergencyScreen from './src/Screens/EmergencyScreen';\nimport LabResultScreen from './src/Screens/AllDetails/LabresultScreen';\n\n\n\nconst Stack = createNativeStackNavigator();\nconst Tab = createBottomTabNavigator();\n\nfunction HomeTabNavigator() {\n  return (\n    <Tab.Navigator\n      screenOptions={({ route }) => ({\n        tabBarIcon: ({ focused, color, size }) => {\n          let iconName;\n\n          if (route.name === 'Home') {\n            iconName = focused ? 'home' : 'home-outline';\n          } else if (route.name === 'Phone') {\n            iconName = focused ? 'call' : 'call-outline';\n          } else if (route.name === 'Notification') {\n            iconName = focused ? 'notifications' : 'notifications-outline';\n          } else if (route.name === 'Setting') {\n            iconName = focused ? 'settings' : 'settings-outline';\n          }\n\n          return <Ionicons name={iconName} size={size} color={color} />;\n        },\n        tabBarActiveTintColor: '#000000',\n        tabBarInactiveTintColor: '#8e8e93',\n        tabBarStyle: { backgroundColor: '#fff', paddingBottom: 5 },\n      })}\n    >\n      <Tab.Screen name=\"Home\" component={HomeScreen} options={{ headerShown: false }} />\n      {/* <Tab.Screen name=\"Phone\" component={PhoneScreen} options={{ headerShown: false }} />\n      <Tab.Screen name=\"Notification\" component={NotificationScreen} options={{ headerShown: false }} />\n      <Tab.Screen name=\"Setting\" component={SettingScreen} options={{ headerShown: false }} /> */}\n    </Tab.Navigator>\n  );\n}\n\nfunction SplashScreen({ navigation }) {\n  // Rediriger vers la page d'accueil après 3 secondes\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      navigation.replace('Login'); // Remplace l'écran Splash par GetStarted\n    }, 3000); // 3000 ms = 3 secondes\n\n    return () => clearTimeout(timer); // Nettoyage du timer\n  }, [navigation]);\n\n  return (\n    <View style={styles.splashContainer}>\n      <Image \n        source={require('./src/assets/Group 13.png')} // Exemple d'icône\n        style={styles.logo} resizeMode='contain'\n      />\n    </View>\n  );\n}\n\n\n// function GetStartedScreen({ navigation }) {\n//   return (\n//     <GestureHandlerRootView>\n//     <View style={styles.getStartedContainer}>\n//       <Image \n//         source={require('./src/assets/consultation.png')} // Exemple d'icône\n//         style={styles.logo} resizeMode='contain'/>\n\n//       <Text style={styles.getStartedText}>Welcome to the App!</Text>\n//       <TouchableOpacity \n//         style={styles.getStartedButton} \n//         onPress={() => navigation.replace('Login')} // Redirige vers la page Login\n//       >\n//         <Text style={styles.getStartedButtonText}>Get Started </Text>\n//         <View style={styles.iconContainer}>\n//         <AntDesign name=\"right\" size={24} color=\"gray\" style={styles.icon} />\n//         <AntDesign name=\"right\" size={24} color=\"black\" style={styles.icon} />\n//         <AntDesign name=\"right\" size={24} color=\"black\" style={styles.icon} />\n//         </View>\n\n//       </TouchableOpacity>\n//     </View>\n//     </GestureHandlerRootView>\n//   );\n// }\n\n\n\n// Stack Navigator pour Login et Signup\nfunction AuthStack() {\n  return (\n    <Stack.Navigator initialRouteName='Splash'>\n      <Stack.Screen name='SignUp' options={{headerShown:false, animation:\"slide_from_right\"}} component={SignUpScreen} />\n      <Stack.Screen name='Login' options={{headerShown:false, animation:\"slide_from_left\"}} component={LoginScreen} />\n      <Stack.Screen name=\"Splash\" options={{ headerShown: false }} component={SplashScreen}  />\n      <Stack.Screen name='Forgot' options={{headerShown:false, animation:\"fade_from_bottom\"}} component={ForgotScreen} />\n      <Stack.Screen name='Home' options={{headerShown:false}} component={HomeScreen} />\n      <Stack.Screen name='NewConsultation' options={{headerShown:false, animation:\"slide_from_right\"}} component={NewConsultationScreen} />\n      <Stack.Screen name=\"HomeTabs\" options={{ headerShown: false }} component={HomeTabNavigator} />\n      <Stack.Screen name=\"NewPatient\" options={{ headerShown: false }} component={NewPatientScreen} />\n      <Stack.Screen name=\"Details\" options={{ headerShown: false , animation:\"ios_from_left\"}} component={ConsultationDetails} />\n      <Stack.Screen name=\"ConsultationTabs\" options={{ headerShown: false }} component={ConsultationTabs} />\n      <Stack.Screen name=\"Emergency\" options={{ headerShown: false , animation:\"ios_from_left\"}} component={EmergencyScreen} />\n      <Stack.Screen name=\"Labsresult\" options={{ headerShown: false }} component={LabResultScreen} />\n\n    </Stack.Navigator>\n  );\n}\n\n\n// Création du client Apollo\nconst createApolloClient = (token) => {\n  const httpLink = new HttpLink({\n    uri: \"http://5.182.33.47:4000/graphql\", // Mettre l'URL de ton serveur GraphQL\n  });\n\n  const authLink = setContext(async (_, { headers }) => {\n    const token = await AsyncStorage.getItem('userToken');\n    console.log(\"Token récupéré:\", token);\n\n    const authorizationHeader = token ? `Bearer ${token}` : '';\n    console.log(\"En-tête Authorization:\", authorizationHeader); // Vérifie l'en-tête ici\n  \n    return {\n      headers: {\n        ...headers,\n        authorization: authorizationHeader,\n      },\n    };\n  });\n\n  return new ApolloClient({\n    link: authLink.concat(httpLink),\n    cache: new InMemoryCache(),\n  });\n};\n\n\n\n\nexport default function App() {\n\n  const [client, setClient] = useState(null);\n\n  useEffect(() => {\n    const initializeApolloClient = async () => {\n      const token = await AsyncStorage.getItem('userToken'); // Récupérer le token ici\n      setClient(createApolloClient(token)); // Créer le client Apollo avec le token\n    };\n\n    initializeApolloClient(); // Initialiser le client Apollo\n  }, []);\n\n  if (!client) {\n    return null; // Ou tu peux afficher un écran de chargement\n  }\n\n\n\n  return (\n    <ApolloProvider client={client}>\n    <NavigationContainer>\n      <SessionProvider>\n       <AuthStack />\n       </SessionProvider>\n    </NavigationContainer>\n    </ApolloProvider>\n  );\n}\n\n\n\nconst styles = StyleSheet.create({\n  splashContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#3C58C1', // Bleu en fond d'écran\n  },\n  logo: {\n    width: '90%',\n    height: '90%', // Dimensions de l'icône\n  },\n  getStartedContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#FFFFFF', // Fond blanc pour la page Get Started\n  },\n  getStartedText: {\n    fontSize: 24,\n    fontWeight: 'semibold',\n    marginBottom: 40,\n    bottom:60,\n  },\n  getStartedButton: {\n    position: 'absolute',\n    bottom: 35, // Positionne le bouton en bas de l'écran\n    backgroundColor: '#D3D3D3',\n    flexDirection:'row',\n    borderWidth:1,\n    paddingVertical: 15,\n    paddingHorizontal: 50,\n    borderRadius: 100,\n    alignSelf:'center',\n    borderColor:'#D4D4D4'\n  },\n\n  getStartedButtonText: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginRight: 15,\n  },\n\n  iconContainer: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',   \n  },\n  icon: {\n    marginRight: -10,\n  },\n\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}