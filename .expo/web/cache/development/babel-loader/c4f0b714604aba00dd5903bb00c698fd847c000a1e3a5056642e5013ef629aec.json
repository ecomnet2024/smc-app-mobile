{"ast":null,"code":"var _jsxFileName = \"/home/newuser/Desktop/tutoo flutter/smc-app-mobile/src/Screens/NewPatientScreen.js\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { GestureHandlerRootView, TouchableOpacity, TextInput } from 'react-native-gesture-handler';\nimport { useMutation, useQuery } from '@apollo/client';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { CREATE_PATIENT } from '../../src/Screens/graphql/Mutation';\nimport { GET_CLINIC, GET_PATIENT } from '../../src/Screens/graphql/Queries';\nimport { UPDATE_STATUS_PATIENT } from '../../src/Screens/graphql/Mutation';\nimport { useNavigation } from '@react-navigation/native';\nimport { SelectList } from 'react-native-dropdown-select-list';\nimport Ionicons from '@expo/vector-icons/Ionicons';\nimport { setLogVerbosity } from '@apollo/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreatePatientForm = () => {\n  const navigation = useNavigation();\n  const {\n    data: clinicData,\n    loading: clinicLoading,\n    error: clinicError,\n    refetch\n  } = useQuery(GET_CLINIC);\n  const {\n    data: patientDataResponse,\n    loading: patientLoading,\n    error: patientError\n  } = useQuery(GET_PATIENT);\n  const [updatePatientStatus] = useMutation(UPDATE_STATUS_PATIENT);\n  const [selectedPatientId, setSelectedPatientId] = useState(null);\n  console.log(\"All Clinic\", clinicData);\n  const [patientData, setPatientData] = useState({\n    name: '',\n    age: '',\n    gender: '',\n    email: '',\n    clinic: '',\n    phone: '',\n    status: 'New'\n  });\n  const [patientCreateOne, {\n    data\n  }] = useMutation(CREATE_PATIENT);\n  const clinicOptions = clinicData?.clinicMany?.map(clinic => ({\n    key: clinic._id,\n    value: clinic.name\n  })) || [];\n  console.log('Clinic Options:', clinicOptions);\n  const patientOptions = patientDataResponse?.patientMany?.map(patient => ({\n    key: patient._id,\n    value: patient.name\n  })) || [];\n  const genderOptions = [{\n    key: 'M',\n    value: 'M'\n  }, {\n    key: 'F',\n    value: 'F'\n  }];\n  const handleSelectSubmit = async () => {\n    if (!selectedPatientId) {\n      Alert.alert('Error', 'Please select a patient');\n      return;\n    }\n    const selectedPatient = patientDataResponse.patientMany.find(patient => patient._id === selectedPatientId);\n    if (!selectedPatient) {\n      Alert.alert('Error', 'Patient not found');\n      return;\n    }\n    try {\n      const result = await updatePatientStatus({\n        variables: {\n          id: selectedPatientId,\n          record: {\n            status: 'Returning'\n          }\n        }\n      });\n      console.log('Mutation result:', result);\n      if (result.data?.patientUpdateById?.record) {\n        console.log('Patient status updated successfully:', result.data.patientUpdateById.record.status);\n      } else {\n        console.error('Error updating patient status:', result);\n        Alert.alert('Error', 'Failed to update patient status');\n      }\n      navigation.navigate('NewConsultation', {\n        patient: selectedPatient\n      });\n    } catch (error) {\n      console.error('Error updating patient status:', error.message, error);\n      Alert.alert('Error', 'An error occurred while updating the patient status');\n    }\n  };\n  const sn = \" \";\n  const handleSubmit = async () => {\n    if (!patientData.name || !patientData.age || !patientData.gender || !patientData.clinic) {\n      alert('Please fill in all required fields');\n      return;\n    }\n    try {\n      console.log('Sending mutation with data:', patientData);\n      const result = await patientCreateOne({\n        variables: {\n          record: {\n            name: patientData.name,\n            age: parseFloat(patientData.age),\n            gender: patientData.gender,\n            clinic: patientData.clinic,\n            email: patientData.email,\n            phone: patientData.phone,\n            status: patientData.status,\n            sn: sn\n          }\n        }\n      });\n      console.log('Données envoyées pour création du patient :', \"name:\", patientData.name, \"age:\", parseFloat(patientData.age), \"gender:\", patientData.gender, \"clinic:\", patientData.clinic, \"email:\", patientData.email, \"phone:\", patientData.phone, \"status:\", patientData.status);\n      console.log('Résultat complet de la mutation:', JSON.stringify(result, null, 2));\n      console.log(\"PatientData\", result);\n      if (result.data && result.data.patientCreateOne && result.data.patientCreateOne.record) {\n        const patient = result.data.patientCreateOne.record;\n        console.log('Patient ID:', patient);\n        console.log(\"datamutation\", data);\n        navigation.navigate('NewConsultation', {\n          patient: patient,\n          patientData: result.data.patientCreateOne.record\n        });\n      } else {\n        console.error('Erreur: la mutation n’a pas renvoyé de patient.');\n      }\n    } catch (error) {\n      console.error('Erreur Apollo :', error.networkError || error.graphQLErrors);\n      console.log('Données envoyées pour création du patient :', patientData);\n      console.log('Résultat complet de la mutation:', JSON.stringify(result, null, 2));\n      console.log(\"PatientData\", result);\n    }\n  };\n  if (clinicLoading || patientLoading) {\n    return _jsxDEV(SafeAreaView, {\n      style: styles.container,\n      children: _jsxDEV(ActivityIndicator, {\n        size: \"large\",\n        color: \"#3C58C1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 12\n    }, this);\n  }\n  if (clinicError || patientError) {\n    console.error('Error fetching data:', clinicError || patientError);\n    return _jsxDEV(SafeAreaView, {\n      style: styles.container,\n      children: [_jsxDEV(Text, {\n        children: \"Failed to load data. Please try again later.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 6\n      }, this), \";\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 12\n    }, this);\n  }\n  setLogVerbosity('debug');\n  return _jsxDEV(GestureHandlerRootView, {\n    children: _jsxDEV(SafeAreaView, {\n      style: styles.container,\n      children: _jsxDEV(ScrollView, {\n        contentContainerStyle: styles.scrollContainer,\n        children: [_jsxDEV(View, {\n          children: _jsxDEV(TouchableOpacity, {\n            style: styles.backButton,\n            onPress: () => navigation.goBack(),\n            children: _jsxDEV(Ionicons, {\n              name: \"chevron-back-circle\",\n              size: 38,\n              color: \"gray\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 6\n        }, this), _jsxDEV(Image, {\n          source: require('../assets/undraw_medicine_b1ol.png'),\n          style: styles.image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 7\n        }, this), _jsxDEV(View, {\n          style: styles.formContainer,\n          children: [_jsxDEV(View, {\n            children: [_jsxDEV(Text, {\n              style: styles.label,\n              children: \"Select an existing patient\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 6\n            }, this), _jsxDEV(SelectList, {\n              setSelected: value => setSelectedPatientId(value),\n              data: patientOptions,\n              placeholder: \"Choose patient created\",\n              boxStyles: styles.dropdown,\n              dropdownStyles: styles.dropdownList\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 11\n            }, this), _jsxDEV(Button, {\n              title: \"Submit existing patient\",\n              onPress: handleSelectSubmit,\n              disabled: !selectedPatientId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 7\n          }, this), _jsxDEV(View, {\n            style: styles.section,\n            children: [_jsxDEV(Text, {\n              style: styles.heading,\n              children: \"Patient information\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 9\n            }, this), _jsxDEV(Text, {\n              style: styles.legend,\n              children: [_jsxDEV(Text, {\n                style: styles.required,\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 14\n              }, this), \" Indicate an obligatory field.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 9\n            }, this), _jsxDEV(Text, {\n              style: styles.label,\n              children: [\"Name\", _jsxDEV(Text, {\n                style: styles.required,\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 9\n            }, this), _jsxDEV(TextInput, {\n              style: styles.input,\n              value: patientData.name,\n              onChangeText: value => setPatientData(Object.assign({}, patientData, {\n                name: value\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 9\n            }, this), _jsxDEV(Text, {\n              style: styles.label,\n              children: [\"Age\", _jsxDEV(Text, {\n                style: styles.required,\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 9\n            }, this), _jsxDEV(TextInput, {\n              style: styles.input,\n              keyboardType: \"numeric\",\n              value: patientData.age,\n              onChangeText: value => setPatientData(Object.assign({}, patientData, {\n                age: parseFloat(value)\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 9\n            }, this), _jsxDEV(Text, {\n              style: styles.label,\n              children: [\"Gender\", _jsxDEV(Text, {\n                style: styles.required,\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 9\n            }, this), _jsxDEV(SelectList, {\n              setSelected: val => setPatientData(Object.assign({}, patientData, {\n                gender: val\n              })),\n              data: genderOptions,\n              placeholder: \"Select Gender\",\n              boxStyles: styles.dropdown,\n              dropdownStyles: styles.dropdownList\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 9\n            }, this), _jsxDEV(Text, {\n              style: styles.label,\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 9\n            }, this), _jsxDEV(TextInput, {\n              style: styles.input,\n              value: patientData.email,\n              onChangeText: value => setPatientData(Object.assign({}, patientData, {\n                email: value\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 9\n            }, this), _jsxDEV(Text, {\n              style: styles.label,\n              children: \"Phone\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 10\n            }, this), _jsxDEV(TextInput, {\n              style: styles.input,\n              value: patientData.phone,\n              onChangeText: text => setPatientData(Object.assign({}, patientData, {\n                phone: text\n              })),\n              placeholder: \"Enter phone number\",\n              keyboardType: \"phone-pad\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 9\n            }, this), _jsxDEV(Text, {\n              style: styles.label,\n              children: [\"Clinic\", _jsxDEV(Text, {\n                style: styles.required,\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 10\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 10\n            }, this), _jsxDEV(SelectList, {\n              setSelected: val => setPatientData(Object.assign({}, patientData, {\n                clinic: val\n              })),\n              data: clinicOptions,\n              placeholder: \"Select Clinic\",\n              boxStyles: styles.dropdown,\n              dropdownStyles: styles.dropdownList\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 8\n            }, this), _jsxDEV(TouchableOpacity, {\n              style: styles.signInButton,\n              onPress: handleSubmit,\n              children: _jsxDEV(Text, {\n                style: styles.buttonText,\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 189,\n    columnNumber: 5\n  }, this);\n};\nconst styles = StyleSheet.create({\n  scrollContainer: {\n    flexGrow: 1,\n    justifyContent: 'center',\n    paddingHorizontal: 13,\n    backgroundColor: '#fff'\n  },\n  container: {\n    flex: 1,\n    marginTop: 9,\n    marginHorizontal: 10\n  },\n  image: {\n    width: '60%',\n    height: 151,\n    resizeMode: 'cover',\n    alignSelf: 'center',\n    marginTop: -8\n  },\n  legend: {\n    fontSize: 13,\n    color: '#666',\n    marginBottom: 10\n  },\n  required: {\n    color: 'red',\n    fontWeight: 'bold'\n  },\n  formContainer: {\n    backgroundColor: '#fff',\n    padding: 20,\n    marginTop: -20,\n    borderTopLeftRadius: 20,\n    borderTopRightRadius: 20,\n    borderBottomLeftRadius: 20,\n    borderBottomRightRadius: 20,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.2,\n    shadowRadius: 5,\n    elevation: 5\n  },\n  heading: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 10,\n    marginTop: 20,\n    color: '#333'\n  },\n  input: {\n    height: 40,\n    borderColor: '#ccc',\n    borderWidth: 1,\n    borderRadius: 5,\n    paddingHorizontal: 10,\n    marginBottom: 15,\n    backgroundColor: '#f9f9f9'\n  },\n  backButton: {\n    left: 5,\n    zIndex: 2\n  },\n  label: {\n    fontSize: 14,\n    color: '#333'\n  },\n  signInButton: {\n    backgroundColor: \"#3C58C1\",\n    paddingVertical: 11,\n    paddingHorizontal: 15,\n    marginHorizontal: 10,\n    borderRadius: 15,\n    alignItems: 'center',\n    marginVertical: 4\n  },\n  buttonText: {\n    color: '#FFFFFF',\n    fontSize: 18,\n    fontWeight: 'semibold'\n  },\n  buttonText2: {\n    color: '#000000',\n    fontSize: 15,\n    fontWeight: 'semibold'\n  },\n  Text: {\n    fontSize: 16,\n    alignSelf: 'center',\n    marginVertical: 5\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    width: '80%'\n  },\n  TextContainer: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginVertical: 8\n  },\n  textArea: {\n    height: 80,\n    borderColor: '#ccc',\n    borderWidth: 1,\n    borderRadius: 5,\n    paddingHorizontal: 10,\n    paddingVertical: 10,\n    marginBottom: 15,\n    backgroundColor: '#f9f9f9'\n  },\n  dropdown: {\n    backgroundColor: '#f9f9f9',\n    borderColor: '#ccc',\n    borderWidth: 1,\n    borderRadius: 5,\n    marginBottom: 15\n  },\n  dropdownList: {\n    backgroundColor: '#f9f9f9'\n  }\n});\nexport default CreatePatientForm;","map":{"version":3,"names":["React","useState","useEffect","View","Text","StyleSheet","Image","ScrollView","Button","Alert","ActivityIndicator","GestureHandlerRootView","TouchableOpacity","TextInput","useMutation","useQuery","SafeAreaView","CREATE_PATIENT","GET_CLINIC","GET_PATIENT","UPDATE_STATUS_PATIENT","useNavigation","SelectList","Ionicons","setLogVerbosity","jsxDEV","_jsxDEV","CreatePatientForm","navigation","data","clinicData","loading","clinicLoading","error","clinicError","refetch","patientDataResponse","patientLoading","patientError","updatePatientStatus","selectedPatientId","setSelectedPatientId","console","log","patientData","setPatientData","name","age","gender","email","clinic","phone","status","patientCreateOne","clinicOptions","clinicMany","map","key","_id","value","patientOptions","patientMany","patient","genderOptions","handleSelectSubmit","alert","selectedPatient","find","result","variables","id","record","patientUpdateById","navigate","message","sn","handleSubmit","parseFloat","JSON","stringify","networkError","graphQLErrors","style","styles","container","children","size","color","fileName","_jsxFileName","lineNumber","columnNumber","contentContainerStyle","scrollContainer","backButton","onPress","goBack","source","require","image","formContainer","label","setSelected","placeholder","boxStyles","dropdown","dropdownStyles","dropdownList","title","disabled","section","heading","legend","required","input","onChangeText","Object","assign","keyboardType","val","text","signInButton","buttonText","create","flexGrow","justifyContent","paddingHorizontal","backgroundColor","flex","marginTop","marginHorizontal","width","height","resizeMode","alignSelf","fontSize","marginBottom","fontWeight","padding","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","borderColor","borderWidth","borderRadius","left","zIndex","paddingVertical","alignItems","marginVertical","buttonText2","buttonContainer","flexDirection","TextContainer","textArea"],"sources":["/home/newuser/Desktop/tutoo flutter/smc-app-mobile/src/Screens/NewPatientScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { View, Text, StyleSheet, Image, ScrollView, Button, Alert , ActivityIndicator} from 'react-native';\nimport { GestureHandlerRootView, TouchableOpacity, TextInput } from 'react-native-gesture-handler'\nimport { useMutation, useQuery } from '@apollo/client';\nimport { SafeAreaView } from 'react-native-safe-area-context'\nimport { CREATE_PATIENT } from '../../src/Screens/graphql/Mutation';\nimport { GET_CLINIC ,GET_PATIENT } from '../../src/Screens/graphql/Queries';\nimport { UPDATE_STATUS_PATIENT } from '../../src/Screens/graphql/Mutation';\nimport { useNavigation } from '@react-navigation/native'\nimport { SelectList } from 'react-native-dropdown-select-list';\nimport Ionicons from '@expo/vector-icons/Ionicons';\nimport { setLogVerbosity } from '@apollo/client';\n\n\nconst CreatePatientForm = () => {\n\n    const navigation = useNavigation();\n\n\n  const { data: clinicData, loading: clinicLoading, error: clinicError, refetch } = useQuery(GET_CLINIC);\n  const { data: patientDataResponse, loading: patientLoading, error: patientError } = useQuery(GET_PATIENT);\n\n  const [updatePatientStatus] = useMutation(UPDATE_STATUS_PATIENT);\n\n  const [selectedPatientId, setSelectedPatientId] = useState(null); // Stocke l'ID du patient sélectionné\n  // Stocke l'ID du patient sélectionné\n\n  console.log(\"All Clinic\",clinicData);\n\n\n  const [patientData, setPatientData] = useState({\n    name: '',\n    age: '',\n    gender: '',\n    email: '',\n    clinic:'',\n    phone: '',\n    status: 'New'\n  });\n  const [patientCreateOne, {data}] = useMutation(CREATE_PATIENT);\n\n // Générer les options pour les cliniques\n const clinicOptions =\n      clinicData?.clinicMany?.map((clinic) => ({\n        key: clinic._id,\n        value: clinic.name,\n      })) || [];\n      console.log('Clinic Options:', clinicOptions);\n\n// Générer les options pour les patients\nconst patientOptions =\n patientDataResponse?.patientMany?.map(patient => ({\n   key: patient._id,\n   value: patient.name,\n })) || [];\n\n   // Options pour le champ Gender\n   const genderOptions = [\n    { key: 'M', value: 'M' },\n    { key: 'F', value: 'F' },\n  ];\n\n  \n  \n  const handleSelectSubmit = async () => {\n\n    if (!selectedPatientId) {\n      Alert.alert('Error', 'Please select a patient');\n      return;\n    }\n    // Récupérer l'objet complet du patient sélectionné\n    const selectedPatient = patientDataResponse.patientMany.find(\n      (patient) => patient._id === selectedPatientId\n    );\n    if (!selectedPatient) {\n      Alert.alert('Error', 'Patient not found');\n      return;\n    }\n\n    try {\n      // Mettre à jour le statut du patient sélectionné\n      const result = await updatePatientStatus({\n        variables: {\n          id: selectedPatientId,\n          record: { status: 'Returning' },\n        },\n      });\n      console.log('Mutation result:', result);\n  \n      if (result.data?.patientUpdateById?.record) {\n        console.log('Patient status updated successfully:', result.data.patientUpdateById.record.status);\n        //Alert.alert('Success', 'Patient status updated to Returning');   // Alert to verify the update of status\n      } else {\n        console.error('Error updating patient status:', result);\n        Alert.alert('Error', 'Failed to update patient status');\n      }\n  \n      // Naviguer vers la page ConsultationScreen avec l'objet patient\n      navigation.navigate('NewConsultation', { patient: selectedPatient });\n    } catch (error) {\n      console.error('Error updating patient status:', error.message, error);\n      Alert.alert('Error', 'An error occurred while updating the patient status');\n    }\n  };\n\n\n\n  const sn=\" \";\n  \n  const handleSubmit = async () => {\n  //     console.log('handleSubmit triggered'); // Ajoutez ce log\n  // alert('handleSubmit triggered'); // Vérifiez aussi avec une alerte\n  \n    if (\n      !patientData.name ||\n      !patientData.age ||\n      !patientData.gender ||\n      !patientData.clinic\n    ) {\n      // Gestion des erreurs si un champ est vide\n      alert('Please fill in all required fields');\n      return;\n    }\n\n    try {\n      console.log('Sending mutation with data:', patientData);\n      const result = await patientCreateOne({\n        variables: {\n          record: {\n            name: patientData.name,\n            age: parseFloat(patientData.age),\n            gender: patientData.gender,\n            clinic: patientData.clinic,          //\"676418c44715a630db6272a4\",\n            email: patientData.email,     //il y a une erreur sur email, ca doit etre null et identique\n            phone: patientData.phone,\n            status: patientData.status,\n            sn : sn\n          },\n        },\n      });\n      console.log('Données envoyées pour création du patient :',\n        \"name:\" ,patientData.name,\n        \"age:\"  ,parseFloat(patientData.age),\n        \"gender:\" ,patientData.gender,\n        \"clinic:\", patientData.clinic,\n        \"email:\" ,patientData.email,\n        \"phone:\" ,patientData.phone,\n        \"status:\" ,patientData.status,\n    );\n\n      console.log('Résultat complet de la mutation:', JSON.stringify(result, null, 2));\n      console.log(\"PatientData\",result);\n      if (result.data && result.data.patientCreateOne && result.data.patientCreateOne.record) {\n        const patient = result.data.patientCreateOne.record;\n        console.log('Patient ID:', patient);\n        console.log(\"datamutation\",data);\n  \n        // Redirection vers la page consultation en passant l'ID du patient\n      navigation.navigate('NewConsultation', { patient: patient ,\n      patientData: result.data.patientCreateOne.record,});\n    } else {\n        console.error('Erreur: la mutation n’a pas renvoyé de patient.');\n      }\n    } catch (error) {\n      //console.error('Error creating patient:', error);\n      console.error('Erreur Apollo :', error.networkError || error.graphQLErrors);\n      console.log('Données envoyées pour création du patient :', patientData);\n      console.log('Résultat complet de la mutation:', JSON.stringify(result, null, 2));\n      console.log(\"PatientData\",result);\n    }\n  };\n\n  if (clinicLoading || patientLoading) {\n    return <SafeAreaView style={styles.container}>\n    <ActivityIndicator size=\"large\" color=\"#3C58C1\" />\n    </SafeAreaView>;\n  }\n  if (clinicError || patientError) {\n    console.error('Error fetching data:', clinicError || patientError);\n    return <SafeAreaView style={styles.container}>\n     <Text>Failed to load data. Please try again later.</Text>;\n     </SafeAreaView>\n  }\n\n  setLogVerbosity('debug');\n\n\n  return (\n    <GestureHandlerRootView>\n    <SafeAreaView style={styles.container}>\n    <ScrollView contentContainerStyle={styles.scrollContainer}>\n     <View>\n\n      <TouchableOpacity \n        style={styles.backButton}\n        onPress={() => navigation.goBack()} >\n        <Ionicons name=\"chevron-back-circle\" size={38} color=\"gray\" />\n      </TouchableOpacity>\n\n     </View>\n      \n      {/* Image au-dessus */}\n      <Image\n        source={require('../assets/undraw_medicine_b1ol.png')}\n        style={styles.image}\n      />\n\n      {/* Formulaire stylisé dans un bloc */}\n      <View style={styles.formContainer}>\n\n      <View>\n     {/* Sélection d'un patient existant */}\n     <Text style={styles.label}>Select an existing patient</Text>\n          <SelectList\n            setSelected={(value) => setSelectedPatientId(value)}\n            data={patientOptions}\n            placeholder=\"Choose patient created\"\n            boxStyles={styles.dropdown}\n            dropdownStyles={styles.dropdownList}\n          />\n      <Button\n        title=\"Submit existing patient\"\n        onPress={handleSelectSubmit}\n        disabled={!selectedPatientId}\n      />\n    </View>\n\n         {/* Patient Section */}\n      <View style={styles.section}>\n        <Text style={styles.heading}>Patient information</Text>\n        <Text style={styles.legend}>\n             <Text style={styles.required}>*</Text> Indicate an obligatory field.\n        </Text>\n\n        <Text style={styles.label}>Name\n        <Text style={styles.required}>*</Text></Text>\n        <TextInput\n          style={styles.input}\n          value={patientData.name}\n          onChangeText={(value) => setPatientData({ ...patientData, name: value })}\n        />\n\n        <Text style={styles.label}>Age\n        <Text style={styles.required}>*</Text></Text>\n        <TextInput\n          style={styles.input}\n          keyboardType=\"numeric\"\n          value={patientData.age}\n          onChangeText={(value) => setPatientData({ ...patientData, age: parseFloat(value) })}\n        />\n\n        <Text style={styles.label}>Gender\n        <Text style={styles.required}>*</Text></Text>\n        <SelectList\n          setSelected={(val) => setPatientData({ ...patientData, gender: val })}\n          data={genderOptions}\n          placeholder=\"Select Gender\"\n          boxStyles={styles.dropdown}\n          dropdownStyles={styles.dropdownList}\n        />\n\n        <Text style={styles.label}>Email</Text>\n        <TextInput\n          style={styles.input}\n          value={patientData.email}\n          onChangeText={(value) => setPatientData({ ...patientData, email: value })}\n        />\n\n         <Text style={styles.label}>Phone</Text>\n        <TextInput\n          style={styles.input}\n          value={patientData.phone}\n          onChangeText={(text) => setPatientData({ ...patientData, phone: text })}\n          placeholder=\"Enter phone number\"\n          keyboardType=\"phone-pad\"\n        />\n\n         <Text style={styles.label}>Clinic\n         <Text style={styles.required}>*</Text></Text>\n       <SelectList\n         setSelected={(val) => setPatientData({ ...patientData, clinic: val })}\n         data={clinicOptions}\n         placeholder=\"Select Clinic\"\n         boxStyles={styles.dropdown}\n         dropdownStyles={styles.dropdownList}\n       />\n\n        <TouchableOpacity style= {styles.signInButton} onPress={handleSubmit} >\n          <Text style={styles.buttonText}>Submit</Text>\n        </TouchableOpacity>\n\n        </View>\n\n    </View>\n    </ScrollView>\n    </SafeAreaView>\n    </GestureHandlerRootView>\n         \n  );\n};\n\n\nconst styles = StyleSheet.create({\n    scrollContainer: {\n        flexGrow: 1, // Permet à ScrollView de s'étendre pour tout le contenu\n        justifyContent: 'center',\n        paddingHorizontal: 13,\n        backgroundColor: '#fff',\n      },\n  container:{\n    flex: 1,\n    marginTop: 9,\n    marginHorizontal: 10,\n  },\n  image: {\n    width: '60%',\n    height: 151, // Taille de l'image en haut\n    resizeMode: 'cover', // Adapter l'image\n    alignSelf: 'center',\n    marginTop:-8,\n  },\n  legend: {\n    fontSize: 13,\n    color: '#666',\n    marginBottom: 10,\n  },\n  required: {\n    color: 'red',\n    fontWeight: 'bold',\n  },\n  formContainer: {\n    backgroundColor: '#fff', // Fond du formulaire\n    padding: 20,\n    marginTop: -20, // Permet au bloc de monter légèrement au-dessus de l'image\n    borderTopLeftRadius: 20,\n    borderTopRightRadius: 20,\n    borderBottomLeftRadius: 20,\n    borderBottomRightRadius: 20,\n    shadowColor: '#000', // Ombre pour un effet de profondeur\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.2,\n    shadowRadius: 5,\n    elevation: 5, // Pour Android, ombre\n  },\n  heading: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 10,\n    marginTop: 20,\n    color: '#333',\n  },\n  input: {\n    height: 40,\n    borderColor: '#ccc',\n    borderWidth: 1,\n    borderRadius: 5,\n    paddingHorizontal: 10,\n    marginBottom: 15,\n    backgroundColor: '#f9f9f9',\n  },\n  backButton: {\n    left: 5,\n    zIndex: 2,\n  },\n  label: {\n    fontSize: 14,\n    color: '#333',\n  },\n  signInButton: {\n    backgroundColor: \"#3C58C1\",\n    paddingVertical: 11,\n    paddingHorizontal:15,\n    marginHorizontal: 10,\n    borderRadius: 15,\n    alignItems: 'center',\n    marginVertical:4,\n  },\n  buttonText: {\n    color: '#FFFFFF',\n    fontSize: 18,\n    fontWeight:'semibold',\n  },\n  buttonText2: {\n    color: '#000000',\n    fontSize: 15,\n    fontWeight:'semibold',\n  },\n  Text:{\n    fontSize: 16,\n    alignSelf: 'center',\n    marginVertical:5,\n  },\n  buttonContainer: {           \n    flexDirection: 'row',  \n    justifyContent: 'space-between',\n    width: '80%',        \n  },\n  TextContainer:{\n    flexDirection:'row',\n    justifyContent:'center',\n    alignItems:'center',\n    marginVertical:8,\n  },\n  textArea: {\n    height: 80,\n    borderColor: '#ccc',\n    borderWidth: 1,\n    borderRadius: 5,\n    paddingHorizontal: 10,\n    paddingVertical: 10,\n    marginBottom: 15,\n    backgroundColor: '#f9f9f9',\n  },\n  dropdown: {\n    backgroundColor: '#f9f9f9',\n    borderColor: '#ccc',\n    borderWidth: 1,\n    borderRadius: 5,\n    marginBottom: 15,\n  },\n  dropdownList: {\n    backgroundColor: '#f9f9f9',\n  },\n});\n\nexport default CreatePatientForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}