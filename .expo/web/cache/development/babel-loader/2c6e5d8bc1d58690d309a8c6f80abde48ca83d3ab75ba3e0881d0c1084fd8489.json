{"ast":null,"code":"import { gql } from \"@apollo/client\";\nexport const GET_USERS = gql`\n\nquery Query {\n    userMany {\n      _id\n      address\n      country\n      createdAt\n    }\n  }\n`;\nexport const GET_ROLES = gql`\nquery RoleMany {\n  roleMany {\n    _id\n    name\n  }\n}`;\nexport const GET_CONSULTATION = gql`\nquery consultationMany {\n  consultationMany {\n    patient{\n      _id\n      name\n      createdAt\n      age\n      gender\n      sn\n      \n    }\n    _id\n    complain\n    medications\n    temperature\n      blood_pressure\n      pulse\n      status\n      createdAt\n      photo_material\n    \n  }\n}`;\nexport const GET_CONSULTATION_MENU = gql`\nquery consultationMany ($limit: Int!){\n  consultationMany(limit: $limit) {\n    patient{\n      _id\n      name\n      createdAt\n      age\n      gender\n      sn\n      \n    }\n    _id\n    complain\n    medications\n    temperature\n      blood_pressure\n      medical_history\n      surgical_history\n      pulse\n      status\n      createdAt\n      photo_material\n    \n  }\n}`;\nexport const GET_CONSULTATION_BY_PATIENT = gql`\nquery GET_CONSULTATIONS_BY_PATIENT($patientId: MongoID!) {\n  consultationMany(filter: { patient: $patientId  }) {\n    _id\n    complain\n    medications\n    temperature\n    blood_pressure\n    medical_history\n    surgical_history\n    pulse\n    status\n    photo_material\n    createdAt\n    patient{\n      _id\n      name\n      createdAt\n      age\n      gender\n      sn\n      \n    }\n  }\n}\n`;\nexport const GET_CLINIC = gql`\nquery ClinicMany {\n  clinicMany {\n    _id\n    city\n    name\n    phoneNumber\n  }\n}\n `;\nexport const GET_PATIENT = gql`\n  query PatientMany {\n    patientMany {\n      _id\n      name\n      age\n      gender\n      status\n      sn\n    }\n  }\n`;\nexport const GET_VACCINATION = gql`\nquery VaccinationMany($filter: FilterFindManyVaccinationInput) {\n  vaccinationMany(filter: $filter) {\n    _id\n    date\n    vaccine\n    createdAt\n  }\n}`;\nexport const GET_LAB_RESULT = gql`\nquery LabResultMany($filter: FilterFindManyLabResultInput) {\n  labResultMany(filter: $filter) {\n    _id\n    date\n    result\n  }\n}`;\nexport const GET_ALLERGY = gql`\nquery AllergyMany($filter: FilterFindManyAllergyInput) {\n  allergyMany(filter: $filter) {\n    _id\n    createdAt\n    description\n    substance\n  }\n}`;\nexport const GET_MEDICATION = gql`\nquery MedicationMany($filter: FilterFindManyMedicationInput) {\n  medicationMany(filter: $filter) {\n    _id\n    createdAt\n    description\n    dosage\n    end_date\n    start_date\n    name\n  }\n}\n`;\nexport const GET_FEDDBACK = gql`\nquery Doctor_feedback($id: MongoID!) {\n  consultationById(_id: $id) {\n    doctor_feedback {\n      user {\n        _id\n        first_name\n        image\n      }\n      comment\n      createdAt\n    }\n    call_center_feedback {\n      comment\n      createdAt\n      user {\n        _id\n      first_name\n      image\n      }\n    }\n    _id\n  }\n}`;\nexport const GET_PRESCRIPTION = gql`\nquery PrescriptionMany($filter: FilterFindManyPrescriptionInput) {\n  prescriptionMany(filter: $filter) {\n    _id\n    contraindications\n    dosage\n    start_date\n    end_date\n    medication\n    dosage\n    \n  }\n}`;\nexport const GET_USER = gql`\nquery UserById($id: MongoID!) {\n  userById(_id: $id) {\n    image\n  }\n}`;\nexport const GET_EMERGENCY = gql`\nquery EmergencyById {\n  emergencyMany {\n    complain\n    patient\n    createdAt\n  }\n}`;","map":{"version":3,"names":["gql","GET_USERS","GET_ROLES","GET_CONSULTATION","GET_CONSULTATION_MENU","GET_CONSULTATION_BY_PATIENT","GET_CLINIC","GET_PATIENT","GET_VACCINATION","GET_LAB_RESULT","GET_ALLERGY","GET_MEDICATION","GET_FEDDBACK","GET_PRESCRIPTION","GET_USER","GET_EMERGENCY"],"sources":["/home/newuser/Desktop/tutoo flutter/smc-app-mobile/src/Screens/graphql/Queries.js"],"sourcesContent":["import { gql } from \"@apollo/client\";\n\nexport const GET_USERS = gql`\n\nquery Query {\n    userMany {\n      _id\n      address\n      country\n      createdAt\n    }\n  }\n`\nexport const GET_ROLES = gql`\nquery RoleMany {\n  roleMany {\n    _id\n    name\n  }\n}`\n\nexport const GET_CONSULTATION = gql`\nquery consultationMany {\n  consultationMany {\n    patient{\n      _id\n      name\n      createdAt\n      age\n      gender\n      sn\n      \n    }\n    _id\n    complain\n    medications\n    temperature\n      blood_pressure\n      pulse\n      status\n      createdAt\n      photo_material\n    \n  }\n}`\n\nexport const GET_CONSULTATION_MENU = gql`\nquery consultationMany ($limit: Int!){\n  consultationMany(limit: $limit) {\n    patient{\n      _id\n      name\n      createdAt\n      age\n      gender\n      sn\n      \n    }\n    _id\n    complain\n    medications\n    temperature\n      blood_pressure\n      medical_history\n      surgical_history\n      pulse\n      status\n      createdAt\n      photo_material\n    \n  }\n}`\n\nexport const GET_CONSULTATION_BY_PATIENT = gql`\nquery GET_CONSULTATIONS_BY_PATIENT($patientId: MongoID!) {\n  consultationMany(filter: { patient: $patientId  }) {\n    _id\n    complain\n    medications\n    temperature\n    blood_pressure\n    medical_history\n    surgical_history\n    pulse\n    status\n    photo_material\n    createdAt\n    patient{\n      _id\n      name\n      createdAt\n      age\n      gender\n      sn\n      \n    }\n  }\n}\n`\nexport const GET_CLINIC = gql`\nquery ClinicMany {\n  clinicMany {\n    _id\n    city\n    name\n    phoneNumber\n  }\n}\n `\n  export const GET_PATIENT = gql`\n  query PatientMany {\n    patientMany {\n      _id\n      name\n      age\n      gender\n      status\n      sn\n    }\n  }\n`\nexport const GET_VACCINATION = gql`\nquery VaccinationMany($filter: FilterFindManyVaccinationInput) {\n  vaccinationMany(filter: $filter) {\n    _id\n    date\n    vaccine\n    createdAt\n  }\n}`\n\nexport const GET_LAB_RESULT = gql`\nquery LabResultMany($filter: FilterFindManyLabResultInput) {\n  labResultMany(filter: $filter) {\n    _id\n    date\n    result\n  }\n}`\n\nexport const GET_ALLERGY = gql`\nquery AllergyMany($filter: FilterFindManyAllergyInput) {\n  allergyMany(filter: $filter) {\n    _id\n    createdAt\n    description\n    substance\n  }\n}`\n\nexport const GET_MEDICATION = gql`\nquery MedicationMany($filter: FilterFindManyMedicationInput) {\n  medicationMany(filter: $filter) {\n    _id\n    createdAt\n    description\n    dosage\n    end_date\n    start_date\n    name\n  }\n}\n`;\n\nexport const GET_FEDDBACK = gql`\nquery Doctor_feedback($id: MongoID!) {\n  consultationById(_id: $id) {\n    doctor_feedback {\n      user {\n        _id\n        first_name\n        image\n      }\n      comment\n      createdAt\n    }\n    call_center_feedback {\n      comment\n      createdAt\n      user {\n        _id\n      first_name\n      image\n      }\n    }\n    _id\n  }\n}`\n\nexport const GET_PRESCRIPTION = gql`\nquery PrescriptionMany($filter: FilterFindManyPrescriptionInput) {\n  prescriptionMany(filter: $filter) {\n    _id\n    contraindications\n    dosage\n    start_date\n    end_date\n    medication\n    dosage\n    \n  }\n}`\nexport const GET_USER = gql`\nquery UserById($id: MongoID!) {\n  userById(_id: $id) {\n    image\n  }\n}`\nexport const GET_EMERGENCY = gql`\nquery EmergencyById {\n  emergencyMany {\n    complain\n    patient\n    createdAt\n  }\n}`\n;\n"],"mappings":"AAAA,SAASA,GAAG,QAAQ,gBAAgB;AAEpC,OAAO,MAAMC,SAAS,GAAGD,GAAG;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,OAAO,MAAME,SAAS,GAAGF,GAAG;AAC5B;AACA;AACA;AACA;AACA;AACA,EAAE;AAEF,OAAO,MAAMG,gBAAgB,GAAGH,GAAG;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AAEF,OAAO,MAAMI,qBAAqB,GAAGJ,GAAG;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AAEF,OAAO,MAAMK,2BAA2B,GAAGL,GAAG;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,OAAO,MAAMM,UAAU,GAAGN,GAAG;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACA,OAAO,MAAMO,WAAW,GAAGP,GAAG;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,OAAO,MAAMQ,eAAe,GAAGR,GAAG;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AAEF,OAAO,MAAMS,cAAc,GAAGT,GAAG;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AAEF,OAAO,MAAMU,WAAW,GAAGV,GAAG;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AAEF,OAAO,MAAMW,cAAc,GAAGX,GAAG;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,OAAO,MAAMY,YAAY,GAAGZ,GAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AAEF,OAAO,MAAMa,gBAAgB,GAAGb,GAAG;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF,OAAO,MAAMc,QAAQ,GAAGd,GAAG;AAC3B;AACA;AACA;AACA;AACA,EAAE;AACF,OAAO,MAAMe,aAAa,GAAGf,GAAG;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,EAAE","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}