{"ast":null,"code":"var _jsxFileName = \"/home/newuser/Desktop/tutoo flutter/smc-app-mobile/src/Screens/NewConsultationScreen.js\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport React from 'react';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { GestureHandlerRootView, TouchableOpacity, TextInput } from 'react-native-gesture-handler';\nimport Ionicons from '@expo/vector-icons/Ionicons';\nimport { useNavigation } from '@react-navigation/native';\nimport { useState } from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { useMutation } from '@apollo/client';\nimport { CREATE_CONSULTATION } from '../../src/Screens/graphql/Mutation';\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport { useRoute } from '@react-navigation/native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jwtDecode } from 'jwt-decode';\nimport * as ImagePicker from 'expo-image-picker';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NewConsultationScreen = () => {\n  const route = useRoute();\n  const {\n    patient,\n    patientData,\n    patientId\n  } = route.params || {};\n  console.log('Route params:', {\n    patient,\n    patientData,\n    patientId\n  });\n  const {\n    name,\n    age,\n    gender\n  } = patientData || {};\n  const [loading, setLoading] = useState(false);\n  const navigation = useNavigation();\n  const getDoctorIdFromToken = async () => {\n    try {\n      const token = await AsyncStorage.getItem('userToken');\n      console.log(\"Token_present\", token);\n      if (token) {\n        const tokenString = String(token);\n        const decodedToken = jwtDecode(tokenString);\n        const doctorId = decodedToken.user_id;\n        console.log(\"token decode\", decodedToken);\n        return doctorId;\n      } else {\n        console.error(\"Token not found\");\n        return null;\n      }\n    } catch (error) {\n      console.error(\"Error decoding token:\", error);\n      return null;\n    }\n  };\n  const [consultationData, setConsultationData] = useState({\n    temperature: '',\n    complain: '',\n    pulse: '',\n    blood_pressure: '',\n    medical_history: '',\n    surgical_history: '',\n    photo_material: [],\n    createdAt: new Date(),\n    status: 'New'\n  });\n  const [showStartDatePicker, setShowStartDatePicker] = useState(false);\n  const handleInputChange = (field, value) => {\n    setConsultationData(Object.assign({}, consultationData, {\n      [field]: value\n    }));\n  };\n  const onStartDateChange = (event, selectedDate) => {\n    setShowStartDatePicker(false);\n    setConsultationData(Object.assign({}, consultationData, {\n      createdAt: selectedDate\n    }));\n  };\n  const [date, setDate] = useState(new Date());\n  const [consultationCreateOne, {\n    data\n  }] = useMutation(CREATE_CONSULTATION);\n  const handlePhotoPick = async () => {\n    const permissionResult = await ImagePicker.requestCameraPermissionsAsync();\n    if (!permissionResult.granted) {\n      Alert.alert('Permission Required', 'Camera access is needed to take a photo.');\n      return;\n    }\n    const photo = await ImagePicker.launchCameraAsync({\n      allowsEditing: true,\n      aspect: [4, 3],\n      quality: 1\n    });\n    if (!photo.canceled) {\n      try {\n        console.log('Photo URI:', photo.assets[0].uri);\n        setConsultationData(prevState => Object.assign({}, prevState, {\n          photo_material: [...prevState.photo_material, photo.assets[0].uri]\n        }));\n      } catch (error) {\n        console.error(\"Error uploading photo:\", error);\n      }\n    }\n  };\n  const pickImageFromGallery = async () => {\n    const photo = await ImagePicker.launchImageLibraryAsync({\n      allowsEditing: true,\n      aspect: [4, 3],\n      quality: 1\n    });\n    if (!photo.canceled) {\n      console.log('Gallery Image URI:', photo.assets[0].uri);\n      setConsultationData(prevState => Object.assign({}, prevState, {\n        photo_material: [...prevState.photo_material, photo.assets[0].uri]\n      }));\n    }\n  };\n  const uploadImageToCloudinary = async fileUri => {\n    console.log('Uploading to Cloudinary:', fileUri);\n    const formData = new FormData();\n    formData.append('file', {\n      uri: fileUri,\n      type: 'image/jpeg',\n      name: 'photo.jpg'\n    });\n    formData.append('upload_preset', 'my_preset');\n    try {\n      const response = await fetch('https://api.cloudinary.com/v1_1/djovqbxfl/image/upload', {\n        method: 'POST',\n        body: formData,\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      const data = await response.json();\n      if (!response.ok) throw new Error(data.error?.message || 'Failed to upload image');\n      return data.secure_url;\n    } catch (error) {\n      console.error('Error uploading to Cloudinary:', error);\n      throw error;\n    }\n  };\n  const handleSubmit = async () => {\n    console.log('Submitting Consultation Data:', consultationData);\n    if (!consultationData.temperature || !consultationData.complain || !consultationData.pulse || !consultationData.blood_pressure) {\n      alert('Please fill in all required fields');\n      return;\n    }\n    const temperature = parseFloat(consultationData.temperature);\n    if (temperature < 30 || temperature > 42) {\n      Alert.alert(\"Error\", \" temperature must be between 30°C and 42°C\");\n      return;\n    }\n    const pulse = parseFloat(consultationData.pulse);\n    if (pulse < 40 || pulse > 180) {\n      Alert.alert(\"Error\", \"Pulse must be between 40 and 180 bpm\");\n      return;\n    }\n    if (!patient) {\n      console.error('Erreur: patient manquant');\n      return;\n    }\n    const medical_staff_Id = await getDoctorIdFromToken();\n    const patientID = patientId || patient?._id;\n    if (!medical_staff_Id || !patientID) {\n      Alert.alert('Error', 'Missing doctor or patient information.');\n      return;\n    }\n    if (!patientID) {\n      Alert.alert('Error', 'Patient ID is missing.');\n      return;\n    }\n    try {\n      setLoading(true);\n      let photoUrls = [];\n      if (consultationData.photo_material.length > 0) {\n        console.log(\"Uploading photos...\");\n        photoUrls = await Promise.all(consultationData.photo_material.map(async uri => {\n          const url = await uploadImageToCloudinary(uri);\n          console.log(\"Uploaded Photo URL:\", url);\n          return url;\n        }));\n      }\n      console.log(\"Data being submitted:\", {\n        medical_staff: medical_staff_Id,\n        patient: patientID,\n        temperature,\n        complain: consultationData.complain,\n        pulse,\n        medical_history: consultationData.medical_history,\n        surgical_history: consultationData.surgical_history,\n        blood_pressure: consultationData.blood_pressure,\n        status: consultationData.status,\n        createdAt: consultationData.createdAt,\n        photo_material: photoUrls\n      });\n      const result = await consultationCreateOne({\n        variables: {\n          record: {\n            medical_staff: medical_staff_Id,\n            patient: patientID,\n            temperature: parseFloat(consultationData.temperature),\n            complain: consultationData.complain,\n            pulse: parseFloat(consultationData.pulse),\n            blood_pressure: consultationData.blood_pressure,\n            medical_history: consultationData.medical_history,\n            surgical_history: consultationData.surgical_history,\n            status: consultationData.status,\n            createdAt: consultationData.createdAt,\n            photo_material: photoUrls\n          }\n        }\n      });\n      console.log('Consultation Created:', result.data);\n      const createdConsultation = result.data?.consultationCreateOne?.record;\n      console.log('Consultation Created:', createdConsultation);\n      console.log('Résultat complet de la mutation:', JSON.stringify(result, null, 2));\n      Alert.alert('Success', 'Consultation created successfully!');\n      setConsultationData(prevState => Object.assign({}, prevState, {\n        temperature: '',\n        complain: '',\n        pulse: '',\n        blood_pressure: '',\n        medical_history: '',\n        surgical_history: '',\n        photo_material: []\n      }));\n      navigation.navigate('ConsultationTabs', {\n        consultation: result.data.consultationCreateOne.record,\n        patient: patient,\n        patientData: result.data.consultationCreateOne.record.patient,\n        patientId: result.data.consultationCreateOne.record.patient\n      });\n    } catch (error) {\n      console.error(\"GraphQL Error:\", error.networkError || error.graphQLErrors || error);\n      console.log('Résultat complet de la mutation:', JSON.stringify(result, null, 2));\n      Alert.alert('Error', error.message || \"Failed to create consultation.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  return _jsxDEV(GestureHandlerRootView, {\n    children: _jsxDEV(SafeAreaView, {\n      style: styles.container,\n      children: _jsxDEV(ScrollView, {\n        contentContainerStyle: styles.scrollContainer,\n        children: [_jsxDEV(View, {\n          children: _jsxDEV(TouchableOpacity, {\n            style: styles.backButton,\n            onPress: () => navigation.goBack(),\n            children: _jsxDEV(Ionicons, {\n              name: \"chevron-back-circle\",\n              size: 38,\n              color: \"gray\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 5\n        }, this), _jsxDEV(Image, {\n          source: require('../assets/undraw_medicine_b1ol.png'),\n          style: styles.image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 6\n        }, this), _jsxDEV(View, {\n          style: styles.patientInfo,\n          children: patientData ? _jsxDEV(_Fragment, {\n            children: [_jsxDEV(Text, {\n              children: [\"Name: \", name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 13\n            }, this), _jsxDEV(Text, {\n              children: [\"Age: \", age]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 13\n            }, this), _jsxDEV(Text, {\n              children: [\"Gender: \", gender]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true) : _jsxDEV(Text, {\n            children: \"cannot show patient information here.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 6\n        }, this), _jsxDEV(View, {\n          style: styles.formContainer,\n          children: [_jsxDEV(View, {\n            style: styles.section,\n            children: [_jsxDEV(Text, {\n              style: styles.heading,\n              children: \"Consultation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 9\n            }, this), _jsxDEV(Text, {\n              style: styles.legend,\n              children: [_jsxDEV(Text, {\n                style: styles.required,\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 14\n              }, this), \" Indicate an obligatory field.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 9\n            }, this), _jsxDEV(Text, {\n              style: styles.label,\n              children: [\"Complaint\", _jsxDEV(Text, {\n                style: styles.required,\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 9\n            }, this), _jsxDEV(TextInput, {\n              style: styles.textArea,\n              value: consultationData.complain,\n              multiline: true,\n              numberOfLines: 3,\n              onChangeText: value => setConsultationData(Object.assign({}, consultationData, {\n                complain: value\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 9\n            }, this), _jsxDEV(Text, {\n              style: styles.label,\n              children: [\"Pulse\", _jsxDEV(Text, {\n                style: styles.required,\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 9\n            }, this), _jsxDEV(TextInput, {\n              style: styles.input,\n              keyboardType: \"numeric\",\n              placeholder: \"/min\",\n              value: consultationData.pulse,\n              onChangeText: value => setConsultationData(Object.assign({}, consultationData, {\n                pulse: parseFloat(value)\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 9\n            }, this), _jsxDEV(Text, {\n              style: styles.label,\n              children: [\"Temperature\", _jsxDEV(Text, {\n                style: styles.required,\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 349,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 9\n            }, this), _jsxDEV(TextInput, {\n              style: styles.input,\n              keyboardType: \"numeric\",\n              placeholder: \"\\xB0C\",\n              value: consultationData.temperature,\n              onChangeText: value => setConsultationData(Object.assign({}, consultationData, {\n                temperature: parseFloat(value)\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 9\n            }, this), _jsxDEV(Text, {\n              style: styles.label,\n              children: [\"Blood Pressure\", _jsxDEV(Text, {\n                style: styles.required,\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 359,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 9\n            }, this), _jsxDEV(TextInput, {\n              style: styles.input,\n              keyboardType: \"numbers-and-punctuation\",\n              value: consultationData.blood_pressure,\n              onChangeText: text => setConsultationData(Object.assign({}, consultationData, {\n                blood_pressure: text\n              })),\n              placeholder: \"SYS/DIA\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 9\n            }, this), _jsxDEV(Text, {\n              style: styles.label,\n              children: \"Medical History\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 9\n            }, this), _jsxDEV(TextInput, {\n              style: styles.textArea,\n              value: consultationData.medical_history,\n              multiline: true,\n              numberOfLines: 2,\n              onChangeText: value => setConsultationData(Object.assign({}, consultationData, {\n                medical_history: value\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 9\n            }, this), _jsxDEV(Text, {\n              style: styles.label,\n              children: \"Surgical History\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 9\n            }, this), _jsxDEV(TextInput, {\n              style: styles.input,\n              value: consultationData.surgical_history,\n              onChangeText: value => setConsultationData(Object.assign({}, consultationData, {\n                surgical_history: value\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 9\n            }, this), _jsxDEV(Text, {\n              style: styles.label,\n              children: \"Photo Material\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 10\n            }, this), _jsxDEV(TouchableOpacity, {\n              style: styles.photoButton,\n              onPress: handlePhotoPick,\n              children: _jsxDEV(Text, {\n                style: styles.photoButtonText,\n                children: \"Take a Photo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 386,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 7\n            }, this), _jsxDEV(TouchableOpacity, {\n              style: styles.photoButton,\n              onPress: pickImageFromGallery,\n              children: _jsxDEV(Text, {\n                style: styles.photoButtonText,\n                children: \"Go to gallery\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 389,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 388,\n              columnNumber: 7\n            }, this), _jsxDEV(View, {\n              children: consultationData.photo_material.map((uri, index) => _jsxDEV(Image, {\n                source: {\n                  uri\n                },\n                style: styles.imagePreview\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 394,\n                columnNumber: 15\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 7\n            }, this), loading && _jsxDEV(ActivityIndicator, {\n              size: \"large\",\n              color: \"#0000ff\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 398,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 7\n          }, this), _jsxDEV(TouchableOpacity, {\n            style: styles.signInButton,\n            onPress: handleSubmit,\n            children: _jsxDEV(Text, {\n              style: styles.buttonText,\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 4\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 286,\n    columnNumber: 5\n  }, this);\n};\nexport default NewConsultationScreen;\nconst styles = StyleSheet.create({\n  scrollContainer: {\n    flexGrow: 1,\n    justifyContent: 'center',\n    paddingHorizontal: 12,\n    backgroundColor: '#fff'\n  },\n  container: {\n    flex: 1,\n    marginTop: 8,\n    marginHorizontal: 10\n  },\n  image: {\n    width: '67%',\n    height: 124,\n    resizeMode: 'cover',\n    alignSelf: 'center'\n  },\n  legend: {\n    fontSize: 13,\n    color: '#666',\n    marginBottom: 10\n  },\n  required: {\n    color: 'red',\n    fontWeight: 'bold'\n  },\n  formContainer: {\n    backgroundColor: '#fff',\n    padding: 20,\n    marginTop: -20,\n    borderTopLeftRadius: 20,\n    borderTopRightRadius: 20,\n    borderBottomLeftRadius: 20,\n    borderBottomRightRadius: 20,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.2,\n    shadowRadius: 5,\n    elevation: 5\n  },\n  heading: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 10,\n    marginTop: 20,\n    color: '#333'\n  },\n  input: {\n    height: 40,\n    borderColor: '#ccc',\n    borderWidth: 1,\n    borderRadius: 5,\n    paddingHorizontal: 10,\n    marginBottom: 15,\n    backgroundColor: '#f9f9f9'\n  },\n  backButton: {\n    left: 5,\n    zIndex: 2\n  },\n  label: {\n    fontSize: 14,\n    color: '#333'\n  },\n  signInButton: {\n    backgroundColor: \"#3C58C1\",\n    paddingVertical: 11,\n    paddingHorizontal: 15,\n    marginHorizontal: 10,\n    borderRadius: 15,\n    alignItems: 'center',\n    marginVertical: 4\n  },\n  buttonText: {\n    color: '#FFFFFF',\n    fontSize: 18,\n    fontWeight: 'semibold'\n  },\n  buttonText2: {\n    color: '#000000',\n    fontSize: 15,\n    fontWeight: 'semibold'\n  },\n  Text: {\n    fontSize: 16,\n    alignSelf: 'center',\n    marginVertical: 5\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    width: '80%'\n  },\n  TextContainer: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginVertical: 8\n  },\n  textArea: {\n    height: 70,\n    borderColor: '#ccc',\n    borderWidth: 1,\n    borderRadius: 5,\n    paddingHorizontal: 10,\n    paddingVertical: 10,\n    marginBottom: 15,\n    backgroundColor: '#f9f9f9'\n  },\n  dropdown: {\n    backgroundColor: '#f9f9f9',\n    borderColor: '#ccc',\n    borderWidth: 1,\n    borderRadius: 5,\n    marginBottom: 15\n  },\n  dropdownList: {\n    backgroundColor: '#f9f9f9'\n  },\n  patientInfo: {\n    width: '100%',\n    backgroundColor: '#f9f9f9',\n    padding: 14,\n    borderRadius: 10,\n    marginBottom: 18\n  },\n  patientInfoText: {\n    fontSize: 16,\n    marginBottom: 5\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 10\n  },\n  card: {\n    padding: 20,\n    borderRadius: 10,\n    marginBottom: 20\n  },\n  photoButton: {\n    backgroundColor: '#ddd',\n    padding: 6,\n    borderRadius: 12,\n    marginBottom: 10,\n    alignItems: 'center'\n  },\n  photoButtonText: {\n    color: '#000000',\n    fontSize: 15\n  },\n  imagePreview: {\n    width: '100%',\n    height: 190,\n    marginBottom: 20\n  },\n  noPhotoText: {\n    color: '#999',\n    marginBottom: 20,\n    fontStyle: 'italic'\n  }\n});","map":{"version":3,"names":["React","SafeAreaView","GestureHandlerRootView","TouchableOpacity","TextInput","Ionicons","useNavigation","useState","Image","useMutation","CREATE_CONSULTATION","DateTimePicker","useRoute","AsyncStorage","jwtDecode","ImagePicker","ActivityIndicator","Formik","Yup","jsxDEV","_jsxDEV","Fragment","_Fragment","NewConsultationScreen","route","patient","patientData","patientId","params","console","log","name","age","gender","loading","setLoading","navigation","getDoctorIdFromToken","token","getItem","tokenString","String","decodedToken","doctorId","user_id","error","consultationData","setConsultationData","temperature","complain","pulse","blood_pressure","medical_history","surgical_history","photo_material","createdAt","Date","status","showStartDatePicker","setShowStartDatePicker","handleInputChange","field","value","Object","assign","onStartDateChange","event","selectedDate","date","setDate","consultationCreateOne","data","handlePhotoPick","permissionResult","requestCameraPermissionsAsync","granted","Alert","alert","photo","launchCameraAsync","allowsEditing","aspect","quality","canceled","assets","uri","prevState","pickImageFromGallery","launchImageLibraryAsync","uploadImageToCloudinary","fileUri","formData","FormData","append","type","response","fetch","method","body","headers","json","ok","Error","message","secure_url","handleSubmit","parseFloat","medical_staff_Id","patientID","_id","photoUrls","length","Promise","all","map","url","medical_staff","result","variables","record","createdConsultation","JSON","stringify","navigate","consultation","networkError","graphQLErrors","children","style","styles","container","ScrollView","contentContainerStyle","scrollContainer","View","backButton","onPress","goBack","size","color","fileName","_jsxFileName","lineNumber","columnNumber","source","require","image","patientInfo","Text","formContainer","section","heading","legend","required","label","textArea","multiline","numberOfLines","onChangeText","input","keyboardType","placeholder","text","photoButton","photoButtonText","index","imagePreview","signInButton","buttonText","StyleSheet","create","flexGrow","justifyContent","paddingHorizontal","backgroundColor","flex","marginTop","marginHorizontal","width","height","resizeMode","alignSelf","fontSize","marginBottom","fontWeight","padding","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","borderColor","borderWidth","borderRadius","left","zIndex","paddingVertical","alignItems","marginVertical","buttonText2","buttonContainer","flexDirection","TextContainer","dropdown","dropdownList","patientInfoText","title","card","noPhotoText","fontStyle"],"sources":["/home/newuser/Desktop/tutoo flutter/smc-app-mobile/src/Screens/NewConsultationScreen.js"],"sourcesContent":["import { StyleSheet, Text, View , ScrollView, Alert} from 'react-native'\nimport React from 'react'\nimport { SafeAreaView } from 'react-native-safe-area-context'\nimport { GestureHandlerRootView, TouchableOpacity, TextInput } from 'react-native-gesture-handler'\nimport Ionicons from '@expo/vector-icons/Ionicons';\nimport { useNavigation } from '@react-navigation/native'\nimport { useState } from 'react'\nimport { Image } from 'react-native'\nimport { useMutation } from '@apollo/client';\nimport { CREATE_CONSULTATION} from '../../src/Screens/graphql/Mutation';\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport { useRoute } from '@react-navigation/native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport {jwtDecode} from 'jwt-decode';\nimport * as ImagePicker from 'expo-image-picker';\nimport { ActivityIndicator } from 'react-native';\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\n\n\n\nconst NewConsultationScreen = () => {\n\n  const route = useRoute();\n  const { patient, patientData, patientId } = route.params || {};\n\n  console.log('Route params:', { patient, patientData, patientId });\n\n  const { name, age, gender} = patientData || {}; // Déstructurer les données\n\n  const [loading, setLoading] = useState(false);\n\n  const navigation = useNavigation();\n\n\n  const getDoctorIdFromToken = async () => {\n    try {\n      const token = await AsyncStorage.getItem('userToken');\n      console.log(\"Token_present\",token);\n      if (token) {\n        const tokenString = String(token)\n        const decodedToken = jwtDecode(tokenString);\n        const doctorId = decodedToken.user_id;\n        console.log(\"token decode\",decodedToken);\n        return doctorId;\n      } else {\n        console.error(\"Token not found\");\n        return null;\n      }\n    } catch (error) {\n      console.error(\"Error decoding token:\", error);\n      return null;\n    }\n  };\n  \n\n  const [consultationData, setConsultationData] = useState({\n    temperature: '',\n    complain: '',\n    pulse: '',\n    blood_pressure: '',\n    medical_history: '',\n    surgical_history: '',\n    photo_material: [], // Stockage de l'URI de la photo\n    createdAt: new Date(),\n    status:'New',\n  });\n\n  const [showStartDatePicker, setShowStartDatePicker] = useState(false);\n\n  const handleInputChange = (field, value) => {\n    setConsultationData({ ...consultationData, [field]: value });\n  };\n\n  const onStartDateChange = (event, selectedDate) => {\n    setShowStartDatePicker(false);\n    setConsultationData({ ...consultationData, createdAt: selectedDate });\n  };\n  const [date, setDate] = useState(new Date());\n  \n\n  // Mutations GraphQL\n const [consultationCreateOne,{data}] = useMutation(CREATE_CONSULTATION);\n\n // Prise de la photo par camera\n const handlePhotoPick = async () => {\n  const permissionResult = await ImagePicker.requestCameraPermissionsAsync();\n  if (!permissionResult.granted) {\n    Alert.alert('Permission Required', 'Camera access is needed to take a photo.');\n    return;\n  }\n  const photo = await ImagePicker.launchCameraAsync({\n    allowsEditing: true,\n    aspect: [4, 3],\n    quality: 1,\n  });\n  if (!photo.canceled) {\n    try {\n      console.log('Photo URI:', photo.assets[0].uri);\n      setConsultationData((prevState) => ({\n        ...prevState,\n        photo_material: [...prevState.photo_material, photo.assets[0].uri],\n      }));\n    } catch (error) {\n      console.error(\"Error uploading photo:\", error);\n    }\n  }\n};\n\n// select image from gallery\nconst pickImageFromGallery = async () => {\n  const photo = await ImagePicker.launchImageLibraryAsync({\n    allowsEditing: true,\n    aspect: [4, 3],\n    quality: 1,\n  });\n\n  if (!photo.canceled) {\n    console.log('Gallery Image URI:', photo.assets[0].uri);\n    setConsultationData((prevState) => ({\n      ...prevState,\n      photo_material: [...prevState.photo_material, photo.assets[0].uri],\n    }));\n  }\n};\n\n\n\n// Function to upload image to Cloudinary\nconst uploadImageToCloudinary = async (fileUri) => {\n\n  console.log('Uploading to Cloudinary:', fileUri);\n\n  const formData = new FormData();\n    formData.append('file', {\n      uri: fileUri,\n      type: 'image/jpeg',\n      name: 'photo.jpg',\n    });\n    formData.append('upload_preset', 'my_preset');\n\n    try {\n      const response = await fetch('https://api.cloudinary.com/v1_1/djovqbxfl/image/upload', {\n        method: 'POST',\n        body: formData,\n        headers: { 'Content-Type': 'multipart/form-data' },\n      });\n\n      const data = await response.json();\n      if (!response.ok) throw new Error(data.error?.message || 'Failed to upload image');\n      return data.secure_url; // URL de l’image téléversée sur Cloudinary\n    } catch (error) {\n      console.error('Error uploading to Cloudinary:', error);\n      throw error;\n    } \n};\n \n\n  const handleSubmit = async () => {\n     // Logs pour vérifier les données du formulaire\n     console.log('Submitting Consultation Data:', consultationData);\n\n     if (!consultationData.temperature || !consultationData.complain || !consultationData.pulse || !consultationData.blood_pressure) {\n      // Gestion des erreurs si un champ est vide\n      alert('Please fill in all required fields');\n      return;\n    }\n\n  // Vérification des valeurs spécifiques\n  const temperature = parseFloat(consultationData.temperature);\n  if (temperature < 30 || temperature > 42) {\n    Alert.alert(\"Error\", \" temperature must be between 30°C and 42°C\");\n    return;\n  }\n  const pulse = parseFloat(consultationData.pulse);\n  if (pulse < 40 || pulse > 180) {\n    Alert.alert(\"Error\", \"Pulse must be between 40 and 180 bpm\");\n    return;\n  }\n\n    if (!patient) {\n      console.error('Erreur: patient manquant');\n      return;\n    }\n\n    const medical_staff_Id = await getDoctorIdFromToken();\n    const patientID = patientId || patient?._id;\n\n    if (!medical_staff_Id || !patientID) {\n      Alert.alert('Error', 'Missing doctor or patient information.');\n      return;\n    }\n    if (!patientID) {\n      Alert.alert('Error', 'Patient ID is missing.');\n      return;\n    }\n    \n\n    try {\n\n      setLoading(true);\n      // Vérifiez si une image a été ajoutée\n    let photoUrls = [];\n    if (consultationData.photo_material.length > 0) {\n      console.log(\"Uploading photos...\");\n      // Upload toutes les images (dans le cas d'un tableau d'images)\n      photoUrls = await Promise.all(\n        consultationData.photo_material.map(async (uri) => {\n          const url = await uploadImageToCloudinary(uri);\n          console.log(\"Uploaded Photo URL:\", url);\n          return url;\n        })\n      );\n    }\n\n    console.log(\"Data being submitted:\", {\n      medical_staff: medical_staff_Id,\n      patient: patientID,\n      temperature,\n      complain: consultationData.complain,\n      pulse,\n      medical_history:consultationData.medical_history,\n      surgical_history:consultationData.surgical_history,\n      blood_pressure: consultationData.blood_pressure,\n      status: consultationData.status,\n      createdAt: consultationData.createdAt,\n      photo_material: photoUrls,\n    });\n    \n\n       //Création de la consultation\n       const result = await consultationCreateOne({\n        variables: {\n          record: {\n            medical_staff: medical_staff_Id,\n            patient: patientID,\n            temperature: parseFloat(consultationData.temperature),\n            complain: consultationData.complain,\n            pulse: parseFloat(consultationData.pulse),\n            blood_pressure: consultationData.blood_pressure,\n            medical_history:consultationData.medical_history,\n            surgical_history: consultationData.surgical_history,\n            status: consultationData.status,\n            createdAt: consultationData.createdAt,\n            photo_material: photoUrls,\n          },\n        },\n      });\n\n      console.log('Consultation Created:', result.data);\n      const createdConsultation = result.data?.consultationCreateOne?.record;\n      console.log('Consultation Created:', createdConsultation);\n\n      console.log('Résultat complet de la mutation:', JSON.stringify(result, null, 2));\n      Alert.alert('Success', 'Consultation created successfully!');\n\n      setConsultationData((prevState) => ({\n        ...prevState,\n        temperature: '',\n        complain: '',\n        pulse: '',\n        blood_pressure: '',\n        medical_history: '',\n        surgical_history: '',\n        photo_material: [],\n      }));\n\n      // Naviguer vers la page de détails\n      navigation.navigate('ConsultationTabs',\n       { consultation: result.data.consultationCreateOne.record,  patient: patient, \n        patientData: result.data.consultationCreateOne.record.patient, \n        patientId: result.data.consultationCreateOne.record.patient  });\n\n    } catch (error) {\n      console.error(\"GraphQL Error:\", error.networkError || error.graphQLErrors || error);\n      console.log('Résultat complet de la mutation:', JSON.stringify(result, null, 2));\n      Alert.alert('Error', error.message || \"Failed to create consultation.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n\n\n  return (\n    <GestureHandlerRootView>\n    <SafeAreaView style={styles.container}>\n    <ScrollView contentContainerStyle={styles.scrollContainer}>\n    <View>\n\n      <TouchableOpacity \n        style={styles.backButton}\n        onPress={() => navigation.goBack()} >\n        <Ionicons name=\"chevron-back-circle\" size={38} color=\"gray\" />\n      </TouchableOpacity>\n\n    </View>\n\n     {/* Image au-dessus */}\n     <Image\n        source={require('../assets/undraw_medicine_b1ol.png')}\n        style={styles.image}\n      />\n\n     {/* Affichage des informations du patient */}\n     <View style={styles.patientInfo}>\n        {patientData ? (\n          <>\n            <Text>Name: {name}</Text>\n            <Text>Age: {age}</Text>\n            <Text>Gender: {gender}</Text>\n          </>\n        ) : (\n          <Text>cannot show patient information here.</Text>\n        )}\n      </View>\n\n   {/* Formulaire stylisé dans un bloc */}\n   <View style={styles.formContainer}>\n\n         {/* Consultation Section */}\n      <View style={styles.section}>\n        <Text style={styles.heading}>Consultation</Text>\n        <Text style={styles.legend}>\n             <Text style={styles.required}>*</Text> Indicate an obligatory field.\n        </Text>\n\n        <Text style={styles.label}>Complaint\n        <Text style={styles.required}>*</Text></Text>\n        <TextInput\n          style={styles.textArea}\n          value={consultationData.complain}\n          multiline\n          numberOfLines={3}\n          onChangeText={(value) => setConsultationData({ ...consultationData, complain: value })}\n        />\n\n        <Text style={styles.label}>Pulse\n        <Text style={styles.required}>*</Text></Text>\n        <TextInput\n          style={styles.input}\n          keyboardType=\"numeric\"\n          placeholder=\"/min\"\n          value={consultationData.pulse}\n          onChangeText={(value) => setConsultationData({ ...consultationData, pulse: parseFloat(value) })}\n        />\n\n        <Text style={styles.label}>Temperature\n        <Text style={styles.required}>*</Text></Text>\n        <TextInput\n          style={styles.input}\n          keyboardType=\"numeric\"\n          placeholder=\"°C\"\n          value={consultationData.temperature}\n          onChangeText={(value) => setConsultationData({ ...consultationData, temperature: parseFloat(value) })}\n        />\n\n        <Text style={styles.label}>Blood Pressure\n        <Text style={styles.required}>*</Text></Text>\n        <TextInput\n          style={styles.input}\n          keyboardType=\"numbers-and-punctuation\"\n          value={consultationData.blood_pressure}\n          onChangeText={(text) => setConsultationData({ ...consultationData, blood_pressure: text })}\n          placeholder=\"SYS/DIA\"\n        />\n\n        <Text style={styles.label}>Medical History</Text>\n        <TextInput\n          style={styles.textArea}\n          value={consultationData.medical_history}\n          multiline\n          numberOfLines={2}\n          onChangeText={(value) => setConsultationData({ ...consultationData, medical_history: value })}\n        />\n\n        <Text style={styles.label}>Surgical History</Text>\n        <TextInput\n          style={styles.input}\n          value={consultationData.surgical_history}\n          onChangeText={(value) => setConsultationData({ ...consultationData, surgical_history: value })}\n        />\n\n         <Text style={styles.label}>Photo Material</Text>\n      <TouchableOpacity style={styles.photoButton} onPress={handlePhotoPick}>\n        <Text style={styles.photoButtonText}>Take a Photo</Text>\n      </TouchableOpacity>\n      <TouchableOpacity style={styles.photoButton} onPress={pickImageFromGallery}>\n        <Text style={styles.photoButtonText}>Go to gallery</Text>\n      </TouchableOpacity>\n\n      <View>\n            {consultationData.photo_material.map((uri, index) => (\n              <Image key={index} source={{ uri }} style={styles.imagePreview} />\n            ))}\n          </View>\n\n          {loading && <ActivityIndicator size=\"large\" color=\"#0000ff\" />}\n\n      </View>\n\n        <TouchableOpacity style= {styles.signInButton} onPress={handleSubmit} >\n          <Text style={styles.buttonText}>Submit</Text>\n        </TouchableOpacity>\n\n    </View>\n    </ScrollView>\n    </SafeAreaView>\n    </GestureHandlerRootView>\n  )\n}\n\n\nexport default NewConsultationScreen\n\nconst styles = StyleSheet.create({\n    scrollContainer: {\n        flexGrow: 1, // Permet à ScrollView de s'étendre pour tout le contenu\n        justifyContent: 'center',\n        paddingHorizontal: 12,\n        backgroundColor: '#fff',\n      },\n  container:{\n    flex: 1,\n    marginTop: 8,\n    marginHorizontal: 10,\n  },\n  image: {\n    width: '67%',\n    height: 124, // Taille de l'image en haut\n    resizeMode: 'cover', // Adapter l'image\n    alignSelf: 'center'\n  },\n  legend: {\n    fontSize: 13,\n    color: '#666',\n    marginBottom: 10,\n  },\n  required: {\n    color: 'red',\n    fontWeight: 'bold',\n  },\n  formContainer: {\n    backgroundColor: '#fff',\n    padding: 20,\n    marginTop: -20, // Permet au bloc de monter légèrement au-dessus de l'image\n    borderTopLeftRadius: 20,\n    borderTopRightRadius: 20,\n    borderBottomLeftRadius: 20,\n    borderBottomRightRadius: 20,\n    shadowColor: '#000', // Ombre pour un effet de profondeur\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.2,\n    shadowRadius: 5,\n    elevation: 5, // Pour Android, ombre\n  },\n  heading: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 10,\n    marginTop: 20,\n    color: '#333',\n  },\n  input: {\n    height: 40,\n    borderColor: '#ccc',\n    borderWidth: 1,\n    borderRadius: 5,\n    paddingHorizontal: 10,\n    marginBottom: 15,\n    backgroundColor: '#f9f9f9',\n  },\n  backButton: {\n    left: 5,\n    zIndex: 2,\n  },\n  label: {\n    fontSize: 14,\n    color: '#333',\n  },\n  signInButton: {\n    backgroundColor: \"#3C58C1\",\n    paddingVertical: 11,\n    paddingHorizontal:15,\n    marginHorizontal: 10,\n    borderRadius: 15,\n    alignItems: 'center',\n    marginVertical:4,\n  },\n  buttonText: {\n    color: '#FFFFFF',\n    fontSize: 18,\n    fontWeight:'semibold',\n  },\n  buttonText2: {\n    color: '#000000',\n    fontSize: 15,\n    fontWeight:'semibold',\n  },\n  Text:{\n    fontSize: 16,\n    alignSelf: 'center',\n    marginVertical:5,\n  },\n  buttonContainer: {           \n    flexDirection: 'row',  \n    justifyContent: 'space-between',\n    width: '80%',        \n  },\n  TextContainer:{\n    flexDirection:'row',\n    justifyContent:'center',\n    alignItems:'center',\n    marginVertical:8,\n  },\n  textArea: {\n    height: 70,\n    borderColor: '#ccc',\n    borderWidth: 1,\n    borderRadius: 5,\n    paddingHorizontal: 10,\n    paddingVertical: 10,\n    marginBottom: 15,\n    backgroundColor: '#f9f9f9',\n  },\n  dropdown: {\n    backgroundColor: '#f9f9f9',\n    borderColor: '#ccc',\n    borderWidth: 1,\n    borderRadius: 5,\n    marginBottom: 15,\n  },\n  dropdownList: {\n    backgroundColor: '#f9f9f9',\n  },\n  patientInfo: {\n    width: '100%',\n    backgroundColor: '#f9f9f9',\n    padding: 14,\n    borderRadius: 10,\n    marginBottom: 18,\n  },\n  patientInfoText: {\n    fontSize: 16,\n    marginBottom: 5,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 10,\n  },\n  card: {\n    padding: 20,\n    borderRadius: 10,\n    marginBottom: 20,\n  },\n  photoButton: {\n    backgroundColor: '#ddd',\n    padding: 6,\n    borderRadius: 12,\n    marginBottom: 10,\n    alignItems: 'center',\n  },\n  photoButtonText: { color: '#000000', fontSize: 15 },\n  imagePreview: { width: '100%', height: 190, marginBottom: 20 },\n  noPhotoText: { color: '#999', marginBottom: 20, fontStyle: 'italic' },\n \n})"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}