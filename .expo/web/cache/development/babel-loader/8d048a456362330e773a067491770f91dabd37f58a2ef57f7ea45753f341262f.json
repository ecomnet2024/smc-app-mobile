{"ast":null,"code":"var _jsxFileName = \"/home/newuser/Desktop/tutoo flutter/smc-app-mobile/src/Screens/EmergencyScreen.js\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport { useNavigation } from '@react-navigation/native';\nimport { GestureHandlerRootView, TouchableOpacity, TextInput } from 'react-native-gesture-handler';\nimport Ionicons from '@expo/vector-icons/Ionicons';\nimport { useMutation, useQuery } from '@apollo/client';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { CREATE_EMERGENCY } from '../../src/Screens/graphql/Mutation';\nimport { GET_EMERGENCY } from '../../src/Screens/graphql/Queries';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useFocusEffect } from '@react-navigation/native';\nimport { jwtDecode } from 'jwt-decode';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmergencyScreen = () => {\n  const navigation = useNavigation();\n  const [emergencyData, setEmergencyData] = useState({\n    patient: '',\n    complain: '',\n    temperature: '',\n    pulse: '',\n    blood_pressure: '',\n    createdAt: new Date(),\n    status: 'New'\n  });\n  const [isFormValidated, setIsFormValidated] = useState(false);\n  const callCenterNumber = '';\n  const [createEmergency, {\n    loading: createLoading\n  }] = useMutation(CREATE_EMERGENCY);\n  const getDoctorIdFromToken = async () => {\n    try {\n      const token = await AsyncStorage.getItem('userToken');\n      console.log(\"Token_present\", token);\n      if (token) {\n        const tokenString = String(token);\n        const decodedToken = jwtDecode(tokenString);\n        const doctorId = decodedToken.user_id;\n        console.log(\"token decode\", decodedToken);\n        return doctorId;\n      } else {\n        console.error(\"Token not found\");\n        return null;\n      }\n    } catch (error) {\n      console.error(\"Error decoding token:\", error);\n      return null;\n    }\n  };\n  const handleCallCenter = () => {\n    if (callCenterNumber) {\n      Linking.openURL(`tel:${callCenterNumber}`).catch(() => {\n        Alert.alert('Error', 'Failed to initiate the call.');\n      });\n    } else {\n      Alert.alert('Feature Unavailable', 'Sorry, this feature is currently unavailable.');\n    }\n  };\n  const handleCreateEmergency = async () => {\n    if (!emergencyData.patient || !emergencyData.complain || !emergencyData.blood_pressure || !emergencyData.pulse || !emergencyData.temperature) {\n      Alert.alert('Error', 'Please fill in all fields for the emergency.');\n      return;\n    }\n    const medical_staff_Id = await getDoctorIdFromToken();\n    if (!medical_staff_Id) {\n      Alert.alert('Error', 'Missing doctor or patient information.');\n      return;\n    }\n    try {\n      const result = await createEmergency({\n        variables: {\n          record: {\n            patient: emergencyData.patient,\n            complain: emergencyData.complain,\n            createdAt: emergencyData.createdAt,\n            blood_pressure: emergencyData.blood_pressure,\n            temperature: emergencyData.temperature,\n            pulse: emergencyData.pulse,\n            createdBy: medical_staff_Id,\n            status: emergencyData.status\n          }\n        }\n      });\n      if (result.data?.emergencyCreateOne?.record) {\n        Alert.alert('Your emergency has been send!', 'Please wait you will receive a feedback as soon as possible');\n        setEmergencyData({\n          patient: '',\n          complain: '',\n          pulse: '',\n          temperature: '',\n          blood_pressure: ''\n        });\n        setIsFormValidated(true);\n      } else {\n        const errorMsg = result.data?.emergencyCreateOne?.error?.message || 'Failed to create emergency.';\n        Alert.alert('Error', errorMsg);\n      }\n    } catch (error) {\n      console.error('Error creating emergency:', error);\n      Alert.alert('Error', 'An error occurred while creating the emergency.');\n    }\n  };\n  return _jsxDEV(GestureHandlerRootView, {\n    children: _jsxDEV(SafeAreaView, {\n      style: styles.container,\n      children: [_jsxDEV(View, {\n        children: _jsxDEV(TouchableOpacity, {\n          style: styles.backButton,\n          onPress: () => navigation.goBack(),\n          children: _jsxDEV(Ionicons, {\n            name: \"chevron-back-circle\",\n            size: 38,\n            color: \"gray\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: {\n          position: 'absolute',\n          width: '100%',\n          height: '100%'\n        },\n        children: [_jsxDEV(Image, {\n          source: require('../assets/undraw_Software_engineer_re_tnjc.png'),\n          style: [StyleSheet.absoluteFillObject, {\n            bottom: 10,\n            top: 620,\n            left: 0,\n            right: 50,\n            width: 350,\n            height: 140\n          }]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 3\n        }, this), _jsxDEV(Image, {\n          source: require('../assets/Vector 1_b.png'),\n          style: [StyleSheet.absoluteFillObject, {\n            bottom: 10,\n            top: 535,\n            left: 145,\n            right: 50,\n            width: 60,\n            height: 60\n          }]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 4\n        }, this), _jsxDEV(Image, {\n          source: require('../assets/bottom1.png'),\n          style: [StyleSheet.absoluteFillObject, {\n            bottom: 0,\n            top: 600,\n            right: 50,\n            width: 200,\n            height: 200\n          }]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 4\n        }, this), _jsxDEV(Image, {\n          source: require('../assets/top1.png'),\n          style: [StyleSheet.absoluteFillObject, {\n            bottom: 50,\n            left: 200,\n            width: 300,\n            height: 200\n          }]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 4\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 7\n      }, this), _jsxDEV(ScrollView, {\n        children: [_jsxDEV(Text, {\n          style: styles.header,\n          children: \"Describe Your Emergency\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: styles.label,\n          children: \"Patient name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), _jsxDEV(TextInput, {\n          placeholder: \"Name\",\n          value: emergencyData.patient,\n          style: styles.input,\n          onChangeText: text => setEmergencyData(Object.assign({}, emergencyData, {\n            patient: text\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: styles.label,\n          children: \"Complaint\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), _jsxDEV(TextInput, {\n          placeholder: \"Complaint\",\n          value: emergencyData.complain,\n          style: styles.input,\n          onChangeText: text => setEmergencyData(Object.assign({}, emergencyData, {\n            complain: text\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: styles.label,\n          children: \"Pulse\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 12\n        }, this), _jsxDEV(TextInput, {\n          style: styles.input,\n          keyboardType: \"numeric\",\n          placeholder: \"/min\",\n          value: emergencyData.pulse,\n          onChangeText: value => setEmergencyData(Object.assign({}, emergencyData, {\n            pulse: parseFloat(value)\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 9\n        }, this), _jsxDEV(Text, {\n          style: styles.label,\n          children: \"Temperature\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 9\n        }, this), _jsxDEV(TextInput, {\n          style: styles.input,\n          keyboardType: \"numeric\",\n          placeholder: \"\\xB0C\",\n          value: emergencyData.temperature,\n          onChangeText: value => setEmergencyData(Object.assign({}, emergencyData, {\n            temperature: parseFloat(value)\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 9\n        }, this), _jsxDEV(Text, {\n          style: styles.label,\n          children: \"Blood Pressure\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 9\n        }, this), _jsxDEV(TextInput, {\n          style: styles.input,\n          keyboardType: \"numbers-and-punctuation\",\n          value: emergencyData.blood_pressure,\n          onChangeText: text => setEmergencyData(Object.assign({}, emergencyData, {\n            blood_pressure: text\n          })),\n          placeholder: \"SYS/DIA\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 9\n        }, this), _jsxDEV(Button, {\n          title: \"Submit Emergency\",\n          onPress: handleCreateEmergency,\n          disabled: createLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 1\n      }, this), isFormValidated && _jsxDEV(TouchableOpacity, {\n        style: styles.callButton,\n        onPress: handleCallCenter,\n        children: [_jsxDEV(Ionicons, {\n          name: \"call\",\n          size: 30,\n          color: \"#fff\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: styles.callButtonText,\n          children: \"Call Center\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n};\nexport default EmergencyScreen;\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    padding: 24\n  },\n  backButton: {\n    marginBottom: 20,\n    marginTop: 11\n  },\n  label: {\n    fontSize: 14,\n    color: '#333'\n  },\n  callButton: {\n    position: 'absolute',\n    bottom: 20,\n    left: 150,\n    backgroundColor: '#08CC0A',\n    padding: 15,\n    borderRadius: 50,\n    flexDirection: 'row',\n    alignItems: 'center',\n    elevation: 5\n  },\n  callButtonText: {\n    color: '#fff',\n    fontSize: 16,\n    marginLeft: 10,\n    fontWeight: 'bold'\n  },\n  choiceContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    marginVertical: 10\n  },\n  input: {\n    backgroundColor: '#f1f1f1',\n    padding: 10,\n    borderRadius: 8,\n    marginBottom: 15,\n    fontSize: 16\n  },\n  formHeader: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 15,\n    marginTop: 20,\n    color: '#333',\n    textAlign: 'center'\n  },\n  checkboxContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 15,\n    justifyContent: 'space-between'\n  },\n  consultationbutton: {\n    width: 150,\n    height: 120,\n    backgroundColor: '#318CE7',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 15,\n    marginHorizontal: 5\n  },\n  text: {\n    color: '#fff',\n    fontWeight: 'semibold'\n  },\n  backgroundImage: {\n    position: 'absolute',\n    width: 250,\n    height: 250,\n    zIndex: -2\n  },\n  image1: {\n    top: 0,\n    left: 8\n  },\n  image2: {\n    top: 200,\n    right: 0,\n    width: 300\n  },\n  image3: {\n    top: 300,\n    right: 10\n  },\n  header: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 15,\n    marginTop: 10,\n    textAlign: 'center',\n    color: '#333'\n  },\n  emergencyCard: {\n    padding: 15,\n    backgroundColor: '#e9e9e9',\n    borderRadius: 8,\n    marginBottom: 10\n  },\n  emergencyName: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: '#000'\n  },\n  emergencyDetail: {\n    fontSize: 14,\n    color: '#555',\n    marginVertical: 5\n  },\n  emergencyDate: {\n    fontSize: 12,\n    color: '#777',\n    textAlign: 'right'\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","View","Text","StyleSheet","SafeAreaView","ScrollView","Button","Alert","Linking","useNavigation","GestureHandlerRootView","TouchableOpacity","TextInput","Ionicons","useMutation","useQuery","ActivityIndicator","CREATE_EMERGENCY","GET_EMERGENCY","AsyncStorage","useFocusEffect","jwtDecode","Image","jsxDEV","_jsxDEV","EmergencyScreen","navigation","emergencyData","setEmergencyData","patient","complain","temperature","pulse","blood_pressure","createdAt","Date","status","isFormValidated","setIsFormValidated","callCenterNumber","createEmergency","loading","createLoading","getDoctorIdFromToken","token","getItem","console","log","tokenString","String","decodedToken","doctorId","user_id","error","handleCallCenter","openURL","catch","alert","handleCreateEmergency","medical_staff_Id","result","variables","record","createdBy","data","emergencyCreateOne","errorMsg","message","children","style","styles","container","backButton","onPress","goBack","name","size","color","fileName","_jsxFileName","lineNumber","columnNumber","position","width","height","source","require","absoluteFillObject","bottom","top","left","right","header","label","placeholder","value","input","onChangeText","text","Object","assign","keyboardType","parseFloat","title","disabled","callButton","callButtonText","create","flex","backgroundColor","padding","marginBottom","marginTop","fontSize","borderRadius","flexDirection","alignItems","elevation","marginLeft","fontWeight","choiceContainer","justifyContent","marginVertical","formHeader","textAlign","checkboxContainer","consultationbutton","marginHorizontal","backgroundImage","zIndex","image1","image2","image3","emergencyCard","emergencyName","emergencyDetail","emergencyDate"],"sources":["/home/newuser/Desktop/tutoo flutter/smc-app-mobile/src/Screens/EmergencyScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { View, Text, StyleSheet, SafeAreaView, ScrollView, Button, Alert, Linking } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\nimport { GestureHandlerRootView, TouchableOpacity, TextInput } from 'react-native-gesture-handler';\nimport Ionicons from '@expo/vector-icons/Ionicons';\nimport { useMutation, useQuery } from '@apollo/client';\nimport { ActivityIndicator } from 'react-native';\nimport {  CREATE_EMERGENCY } from '../../src/Screens/graphql/Mutation';\nimport { GET_EMERGENCY } from '../../src/Screens/graphql/Queries';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useFocusEffect } from '@react-navigation/native';\nimport {jwtDecode} from 'jwt-decode';\nimport { Image } from 'react-native';\n\n\nconst EmergencyScreen = () => {\n\n  const navigation = useNavigation();\n\n  const [emergencyData, setEmergencyData] = useState({\n    patient: '',\n    complain: '',\n    temperature: '',\n    pulse: '',\n    blood_pressure: '',\n    createdAt: new Date(),\n    status: 'New',\n  });\n\n  const [isFormValidated, setIsFormValidated] = useState(false); // Nouveau état pour gérer la visibilité du bouton\n  const callCenterNumber = ''; // un numéro ici\n\n \n  const [createEmergency, { loading: createLoading }] = useMutation(CREATE_EMERGENCY);\n\n  const getDoctorIdFromToken = async () => {\n    try {\n      const token = await AsyncStorage.getItem('userToken');\n      console.log(\"Token_present\",token);\n      if (token) {\n        const tokenString = String(token)\n        const decodedToken = jwtDecode(tokenString);\n        const doctorId = decodedToken.user_id;\n        console.log(\"token decode\",decodedToken);\n        return doctorId;\n      } else {\n        console.error(\"Token not found\");\n        return null;\n      }\n    } catch (error) {\n      console.error(\"Error decoding token:\", error);\n      return null;\n    }\n  };\n\n  const handleCallCenter = () => {\n    if (callCenterNumber) {\n      // Ouvre le composeur téléphonique\n      Linking.openURL(`tel:${callCenterNumber}`).catch(() => {\n        Alert.alert('Error', 'Failed to initiate the call.');\n      });\n    } else {\n      Alert.alert('Feature Unavailable', 'Sorry, this feature is currently unavailable.');\n    }\n  };\n\n  // const { data: emergencyDataResponse, loading: emergencyLoading, error: emergencyError, refetch } = useQuery(GET_EMERGENCY);\n  // Exécution de la requête avec un filtre\n\n  // useFocusEffect(\n  //   React.useCallback(() => {\n  //     refetch(); // Rafraîchir les données à chaque fois que la page est affichée\n  //     console.log('Data refreshed on focus');\n  //   }, [refetch])\n  // );\n\n\n  const handleCreateEmergency = async () => {\n\n    if (!emergencyData.patient || !emergencyData.complain ||!emergencyData.blood_pressure || !emergencyData.pulse||!emergencyData.temperature) {\n      Alert.alert('Error', 'Please fill in all fields for the emergency.');\n      return;\n    }\n    const medical_staff_Id = await getDoctorIdFromToken();\n    if (!medical_staff_Id) {\n      Alert.alert('Error', 'Missing doctor or patient information.');\n      return;\n    }\n\n    try {\n      const result = await createEmergency({\n        variables: {\n          record: {\n            patient: emergencyData.patient,\n            complain: emergencyData.complain,\n            createdAt: emergencyData.createdAt,\n            blood_pressure: emergencyData.blood_pressure,\n            temperature: emergencyData.temperature,\n            pulse: emergencyData.pulse,\n            createdBy: medical_staff_Id,\n            status: emergencyData.status,\n          },\n        },\n      });\n\n      if (result.data?.emergencyCreateOne?.record) {\n        Alert.alert( 'Your emergency has been send!', 'Please wait you will receive a feedback as soon as possible');\n        setEmergencyData({ patient: '', complain: '',pulse: '',temperature: '',blood_pressure: '' });\n        setIsFormValidated(true); // Active le bouton après validation\n\n      } else {\n        const errorMsg = result.data?.emergencyCreateOne?.error?.message || 'Failed to create emergency.';\n        Alert.alert('Error', errorMsg);\n      }\n    } catch (error) {\n      console.error('Error creating emergency:', error);\n      Alert.alert('Error', 'An error occurred while creating the emergency.');\n    }\n  };\n\n\n  // if (emergencyLoading) return <SafeAreaView style={styles.container}>\n  // <ActivityIndicator size=\"large\" color=\"#3C58C1\" />\n  // </SafeAreaView>;\n  // if (emergencyError) {\n  //   console.error('Error fetching emergencies:', emergencyError);\n  //   return <Text>Failed to load emergencies. Please try again later.</Text>;\n  // }\n\n\n  return (\n    <GestureHandlerRootView>\n      <SafeAreaView style={styles.container}>\n        <View>\n        <TouchableOpacity style={styles.backButton} onPress={() => navigation.goBack()}>\n          <Ionicons name=\"chevron-back-circle\" size={38} color=\"gray\" />\n        </TouchableOpacity>\n        </View>\n\n         {/* Images en arrière-plan */}\n      <View style={{ position: 'absolute', width: '100%', height: '100%' }}>\n  <Image\n    source={require('../assets/undraw_Software_engineer_re_tnjc.png')}\n    style={[StyleSheet.absoluteFillObject, { bottom: 10,top:620, left: 0,right:50, width: 350, height: 140 }]}\n  />\n   <Image\n    source={require('../assets/Vector 1_b.png')}\n    style={[StyleSheet.absoluteFillObject, { bottom: 10,top:535, left: 145,right:50, width: 60, height: 60 }]}\n  />\n   <Image\n    source={require('../assets/bottom1.png')}\n    style={[StyleSheet.absoluteFillObject, { bottom: 0,top: 600, right: 50, width: 200, height: 200 }]}\n  />\n   <Image\n    source={require('../assets/top1.png')}\n    style={[StyleSheet.absoluteFillObject, { bottom: 50, left: 200, width: 300, height: 200 }]}\n  />\n</View>\n\n\n<ScrollView>\n          <Text style={styles.header}>Describe Your Emergency</Text>\n          <Text style={styles.label}>Patient name</Text>\n          <TextInput\n            placeholder=\"Name\"\n            value={emergencyData.patient}\n            style={styles.input}\n            onChangeText={(text) => setEmergencyData({ ...emergencyData, patient: text })}\n          />\n          <Text style={styles.label}>Complaint</Text>\n          <TextInput\n            placeholder=\"Complaint\"\n            value={emergencyData.complain}\n            style={styles.input}\n            onChangeText={(text) => setEmergencyData({ ...emergencyData, complain: text })}\n          />\n           <Text style={styles.label}>Pulse</Text>\n        <TextInput\n          style={styles.input}\n          keyboardType=\"numeric\"\n          placeholder=\"/min\"\n          value={emergencyData.pulse}\n          onChangeText={(value) => setEmergencyData({ ...emergencyData, pulse: parseFloat(value) })}\n        />\n\n        <Text style={styles.label}>Temperature</Text>\n        <TextInput\n          style={styles.input}\n          keyboardType=\"numeric\"\n          placeholder=\"°C\"\n          value={emergencyData.temperature}\n          onChangeText={(value) => setEmergencyData({ ...emergencyData, temperature: parseFloat(value) })}\n        />\n\n        <Text style={styles.label}>Blood Pressure</Text>\n        <TextInput\n          style={styles.input}\n          keyboardType=\"numbers-and-punctuation\"\n          value={emergencyData.blood_pressure}\n          onChangeText={(text) => setEmergencyData({ ...emergencyData, blood_pressure: text })}\n          placeholder=\"SYS/DIA\"\n        />\n\n          <Button title=\"Submit Emergency\" onPress={handleCreateEmergency} disabled={createLoading} />\n\n          {/* <Text style={styles.header}>Emergency in the treatment list</Text>\n          {emergencyDataResponse?.emergencyMany?.map((emergency) => (\n            <View key={emergency.createdAt} style={styles.emergencyCard}>\n              <Text style={styles.emergencyName}>{emergency.name}</Text>\n              <Text style={styles.emergencyDetail}>{emergency.complain}</Text>\n              <Text style={styles.emergencyDate}>{new Date(emergency.createdAt).toLocaleDateString()}</Text>\n              <Text>You will receive a feedback as soon as possible.</Text>\n              <Text>You can also test our Call feature</Text>\n            </View>\n          ))} */}\n        </ScrollView>\n\n         {/* Bouton Call Center */}\n      {isFormValidated && (\n        <TouchableOpacity style={styles.callButton} onPress={handleCallCenter}>\n          <Ionicons name=\"call\" size={30} color=\"#fff\" />\n          <Text style={styles.callButtonText}>Call Center</Text>\n        </TouchableOpacity>\n      )}\n\n      </SafeAreaView>\n    </GestureHandlerRootView>\n  );\n};\n\nexport default EmergencyScreen;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    padding: 24,\n  },\n  backButton: {\n    marginBottom: 20,\n    marginTop: 11,\n  },\n  label: {\n    fontSize: 14,\n    color: '#333',\n  },\n  callButton: {\n    position: 'absolute',\n    bottom: 20,\n    left: 150,\n    backgroundColor: '#08CC0A',\n    padding: 15,\n    borderRadius: 50,\n    flexDirection: 'row',\n    alignItems: 'center',\n    elevation:5,\n  },\n  callButtonText: {\n    color: '#fff',\n    fontSize: 16,\n    marginLeft: 10,\n    fontWeight: 'bold',\n  },\n  choiceContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    marginVertical: 10,\n  },\n  input: {\n    backgroundColor: '#f1f1f1',\n    padding: 10,\n    borderRadius: 8,\n    marginBottom: 15,\n    fontSize: 16,\n  },\n  formHeader: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 15,\n    marginTop: 20,\n    color: '#333',\n    textAlign: 'center',\n  },\n  checkboxContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 15,\n    justifyContent: 'space-between',\n  },\n  consultationbutton: {\n    width: 150,\n    height: 120,\n    backgroundColor: '#318CE7',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 15,\n    marginHorizontal:5 ,\n  },\n  text:{\n    color:'#fff',\n    fontWeight:'semibold',\n  },\n  backgroundImage: {\n    position: 'absolute',\n    width: 250,  // Largeur de l'image\n    height: 250, // Hauteur de l'image\n    zIndex: -2,  // Met les images derrière le contenu\n  },\n  image1: {\n    top: 0,\n    left: 8,\n  },\n  image2: {\n    top: 200,\n    right: 0,\n    width: 300,  // Largeur de l'image\n  },\n  image3: {\n    top: 300,\n    right: 10,\n  },\n  header: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 15,\n    marginTop: 10,\n    textAlign: 'center',\n    color: '#333',\n  },\n  emergencyCard: {\n    padding: 15,\n    backgroundColor: '#e9e9e9',\n    borderRadius: 8,\n    marginBottom: 10,\n  },\n  emergencyName: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: '#000',\n  },\n  emergencyDetail: {\n    fontSize: 14,\n    color: '#555',\n    marginVertical: 5,\n  },\n  emergencyDate: {\n    fontSize: 12,\n    color: '#777',\n    textAlign: 'right',\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}